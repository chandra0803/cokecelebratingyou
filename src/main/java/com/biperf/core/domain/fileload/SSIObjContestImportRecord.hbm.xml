<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
  <class name="com.biperf.core.domain.fileload.SSIObjContestImportRecord" table="stage_ssi_objective_import">

    <!-- This is the surrogate primary key.  Make sure the column and sequence names are correct. -->
    <id name="id" type="java.lang.Long" column="IMPORT_RECORD_ID">
      <generator class="seqhilo">
        <param name="max_lo">0</param> <param name="sequence">IMPORT_RECORD_PK_SQ</param>
      </generator>
    </id>
    <!-- The create audit information is handled in the AuditCreateType and AuditInterceptor.  Column order here is important. -->
    <property name="auditCreateInfo" type="com.biperf.core.utils.hibernate.AuditCreateType">
      <column name="DATE_CREATED"/>
      <column name="CREATED_BY"/>
    </property>
    <property name="importFileId" type="java.lang.Long" column="IMPORT_FILE_ID"/>
     <property name="userId" type="java.lang.Long" column="USER_ID"/>
     <property name="userName" type="java.lang.String" column="USER_NAME"/>
     <property name="firstName" type="java.lang.String" column="FIRST_NAME"/>
     <property name="lastName" type="java.lang.String" column="LAST_NAME"/>
     <property name="role" type="java.lang.String" column="ROLE"/>
     <property name="objectiveDescription" type="java.lang.String" column="OBJECTIVE_DESCRIPTION"/>
     <property name="objectiveAmount" type="java.math.BigDecimal" column="OBJECTIVE_AMOUNT"/>
     <property name="objectivePayout" type="java.math.BigDecimal" column="OBJECTIVE_PAYOUT"/>
     <property name="otherPayoutDescription" type="java.lang.String" column="OTHER_PAYOUT_DESCRIPTION"/>
     <property name="otherValue" type="java.math.BigDecimal" column="OTHER_VALUE"/>
     <property name="bonusForEvery" type="java.math.BigDecimal" column="BONUS_FOR_EVERY"/>
     <property name="bonusPayout" type="java.math.BigDecimal" column="BONUS_PAYOUT"/>
     <property name="bonusPayoutCap" type="java.math.BigDecimal" column="BONUS_PAYOUT_CAP"/>
     
    <set name="importRecordErrors" table="IMPORT_RECORD_ERROR" cascade="all-delete-orphan" inverse="true">
      <key column="IMPORT_RECORD_ID"/>
      <one-to-many class="com.biperf.core.domain.fileload.ImportRecordError"/>
    </set>

  </class>
  
  <query name="com.biperf.core.domain.fileload.SSIObjContestImportRecordsByPage">
    <![CDATA[
		from com.biperf.core.domain.fileload.SSIObjContestImportRecord ssicontestobj
	    where ssicontestobj.importFileId = :importFileId
    ]]>
  </query>
    
  	<sql-query name="com.biperf.core.domain.fileload.SSIObjContestImportRecordsByPageWithoutError">
	<return alias="b" class="com.biperf.core.domain.fileload.SSIObjContestImportRecord"/>
	    <![CDATA[
	      select {b.*}  from stage_ssi_objective_import b
	      where b.import_file_id = :importFileId 
	      and NOT EXISTS(SELECT import_record_id
                     FROM IMPORT_RECORD_ERROR ire
                    WHERE ire.import_record_id = b.import_record_id
                      AND ire.import_file_id = b.import_file_id)	      
	    ]]>
	 </sql-query>
  
	<sql-query name="com.biperf.core.domain.fileload.SSIObjContestImportRecordsByPageWithError">
	<return alias="b" class="com.biperf.core.domain.fileload.SSIObjContestImportRecord"/>
	    <![CDATA[
	     select {b.*} from stage_ssi_objective_import b
       	 where b.import_file_id = :importFileId 
         and EXISTS(SELECT import_record_id
       				FROM IMPORT_RECORD_ERROR ire
                    WHERE ire.import_record_id = b.import_record_id
                      AND ire.import_file_id = b.import_file_id)	     
	    ]]>
	  </sql-query>

  
</hibernate-mapping>