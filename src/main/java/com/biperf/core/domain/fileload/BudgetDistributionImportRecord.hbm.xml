<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
  <class name="com.biperf.core.domain.fileload.BudgetDistributionImportRecord" table="STAGE_INACTIVE_BUDGET_RD">

    <!-- This is the surrogate primary key.  Make sure the column and sequence names are correct. -->
    <id name="id" type="java.lang.Long" column="IMPORT_RECORD_ID">
      <generator class="seqhilo">
        <param name="max_lo">0</param> <param name="sequence">IMPORT_RECORD_PK_SQ</param>
      </generator>
    </id>

    <!-- The create audit information is handled in the AuditCreateType and AuditInterceptor.  Column order here is important. -->
    <property name="auditCreateInfo" type="com.biperf.core.utils.hibernate.AuditCreateType">
      <column name="DATE_CREATED"/>
      <column name="CREATED_BY"/>
    </property>

    <property name="importFileId" type="java.lang.Long" column="IMPORT_FILE_ID"/>
    <property name="selectedBudgetMasterId" type="java.lang.Long" column="SELECTED_BUDGET_MASTER_ID"/>
  	<property name="selectedBudgetTimePeriodId" type="java.lang.Long" column="SELECTED_BUDGET_TIME_PERIOD_ID"/>
  	<property name="orgUnitId" type="java.lang.Long" column="ORG_UNIT_ID"/>   
  	<property name="srcBudgetMasterName" type="java.lang.String" column="BUDGET_MASTER_NAME"/>
  	<property name="srcBudgetMasterDisplayName" type="java.lang.String" column="BUDGET_MASTER_TIME_PERIOD"/>
  	<property name="srcBudgetTimePeriodName" type="java.lang.String" column="BUDGET_TIME_PERIOD"/>
  	<property name="srcBudgetOwnerName" type="java.lang.String" column="BUDGET_OWNER_NAME"/>
  	<property name="srcBudgetOwnerLoginId" type="java.lang.String" column="BUDGET_OWNER_LOGIN_ID"/>
  	<property name="srcBudgetMasterId" type="java.lang.Long" column="BUDGET_MASTER_ID"/>
    <property name="srcBudgetTimePeriodId" type="java.lang.Long" column="BUDGET_SEGMENT_ID"/>
    <property name="srcBudgetId" type="java.lang.Long" column="BUDGET_ID"/>
    <property name="srcBudgetAmount" type="java.math.BigDecimal" column="BUDGET_AMOUNT"/>
    
    <property name="budgetType" column="BUDGET_TYPE">
      <type name="com.biperf.core.utils.hibernate.PickListUserType">
        <param name="lookupClass">com.biperf.core.domain.enums.BudgetType</param>
      </type>
    </property>
    
    <property name="transferToOwner1" type="java.lang.String" column="TRANSFER_TO_OWNER1"/>
    <property name="amountOwner1" type="java.math.BigDecimal" column="AMOUNT_OWNER1"/>
    <property name="transferToOwner2" type="java.lang.String" column="TRANSFER_TO_OWNER2"/>
    <property name="amountOwner2" type="java.math.BigDecimal" column="AMOUNT_OWNER2"/>
    <property name="transferToOwner3" type="java.lang.String" column="TRANSFER_TO_OWNER3"/>
    <property name="amountOwner3" type="java.math.BigDecimal" column="AMOUNT_OWNER3"/>
    
    <set name="importRecordErrors" table="IMPORT_RECORD_ERROR" cascade="all-delete-orphan" inverse="true">
      <key column="IMPORT_RECORD_ID"/>
      <one-to-many class="com.biperf.core.domain.fileload.ImportRecordError"/>
    </set>

  </class>
  
  <query name="com.biperf.core.domain.import.file.BudgetDistributionRecordsByPage">
    <![CDATA[
		from com.biperf.core.domain.fileload.BudgetDistributionImportRecord budgetDistributionRecord
	    where budgetDistributionRecord.importFileId = :importFileId
    ]]>
  </query>
  
  	<sql-query name="com.biperf.core.domain.import.file.BudgetDistributionRecordsByPageWithoutError">
	<return alias="b" class="com.biperf.core.domain.fileload.BudgetDistributionImportRecord"/>
	    <![CDATA[
	      select {b.*}  from STAGE_INACTIVE_BUDGET_RD b
	      where b.import_file_id = :importFileId 
	      and NOT EXISTS(SELECT import_record_id
                     FROM IMPORT_RECORD_ERROR ire
                    WHERE ire.import_record_id = b.import_record_id
                      AND ire.import_file_id = b.import_file_id)
	      order by b.BUDGET_AMOUNT asc
	    ]]>
	 </sql-query>
  
	<sql-query name="com.biperf.core.domain.import.file.BudgetDistributionRecordsByPageWithError">
	<return alias="b" class="com.biperf.core.domain.fileload.BudgetDistributionImportRecord"/>
	    <![CDATA[
	     select {b.*} from STAGE_INACTIVE_BUDGET_RD b
       	 where b.import_file_id = :importFileId 
         and EXISTS(SELECT import_record_id
       				FROM IMPORT_RECORD_ERROR ire
                    WHERE ire.import_record_id = b.import_record_id
                      AND ire.import_file_id = b.import_file_id)
	     order by b.BUDGET_AMOUNT asc
	    ]]>
	  </sql-query>
  

</hibernate-mapping>