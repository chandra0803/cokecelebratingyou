<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
  <class name="com.biperf.core.domain.fileload.ProductClaimImportRecord" table="stage_prd_claim_imp_record">

    <!-- This is the surrogate primary key.  Make sure the column and sequence names are correct. -->
    <id name="id" type="java.lang.Long" column="IMPORT_RECORD_ID">
      <generator class="seqhilo">
        <param name="max_lo">0</param> <param name="sequence">IMPORT_RECORD_PK_SQ</param>
      </generator>
    </id>

    <!-- The create audit information is handled in the AuditCreateType and AuditInterceptor.  Column order here is important. -->
    <property name="auditCreateInfo" type="com.biperf.core.utils.hibernate.AuditCreateType">
      <column name="DATE_CREATED"/>
      <column name="CREATED_BY"/>
    </property>

    <property name="importFileId" type="java.lang.Long" column="IMPORT_FILE_ID"/>
    <property name="actionType" type="java.lang.String" column="ACTION_TYPE"/>
    <property name="submitterUserId" type="java.lang.Long" column="SUBMITTER_USER_ID"/>
    <property name="submitterUserName" type="java.lang.String" column="SUBMITTER_USER_NAME"/>
    <property name="trackToNodeId" type="java.lang.Long" column="TRACK_TO_NODE_ID"/>
    <property name="trackToNodeName" type="java.lang.String" column="TRACK_TO_NODE_NAME"/>

    <set name="productClaimImportFieldRecords" table="stage_prd_claim_imp_fld_record" 
    cascade="all-delete-orphan" inverse="true">
      <key column="IMPORT_RECORD_ID"/>
      <one-to-many class="com.biperf.core.domain.fileload.ProductClaimImportFieldRecord"/>
    </set>

    <set name="productClaimImportProductRecords" table="stage_prd_claim_imp_prd_record" 
    cascade="all-delete-orphan" inverse="true">
      <key column="IMPORT_RECORD_ID"/>
      <one-to-many class="com.biperf.core.domain.fileload.ProductClaimImportProductRecord"/>
    </set>
        
    
    <set name="importRecordErrors" table="IMPORT_RECORD_ERROR" cascade="all-delete-orphan" inverse="true">
      <key column="IMPORT_RECORD_ID"/>
      <one-to-many class="com.biperf.core.domain.fileload.ImportRecordError"/>
    </set>

  </class>

  <query name="com.biperf.core.domain.import.file.ProductClaimRecordsByPage">
    <![CDATA[
		from com.biperf.core.domain.fileload.ProductClaimImportRecord productClaimRecord
	   where productClaimRecord.importFileId = :importFileId 
    ]]>
  </query>
  
  	<sql-query name="com.biperf.core.domain.import.file.ProductClaimRecordsByPageWithoutError">
	<return alias="pc" class="com.biperf.core.domain.fileload.ProductClaimImportRecord"/>
	    <![CDATA[
	      select {pc.*}  from stage_prd_claim_imp_record pc
	      where pc.import_file_id = :importFileId 
	      and NOT EXISTS(SELECT import_record_id
                     FROM IMPORT_RECORD_ERROR ire
                    WHERE ire.import_record_id = pc.import_record_id
                      AND ire.import_file_id = pc.import_file_id)
	      order by pc.action_Type asc, pc.SUBMITTER_USER_ID asc,pc.SUBMITTER_USER_NAME asc
	    ]]>
	 </sql-query>
  
	<sql-query name="com.biperf.core.domain.import.file.ProductClaimRecordsByPageWithError">
	<return alias="pc" class="com.biperf.core.domain.fileload.ProductClaimImportRecord"/>
	    <![CDATA[
	      select {pc.*}  from stage_prd_claim_imp_record pc
	      where pc.import_file_id = :importFileId 
          and EXISTS(SELECT import_record_id
                     FROM IMPORT_RECORD_ERROR ire
                    WHERE ire.import_record_id = pc.import_record_id
                      AND ire.import_file_id = pc.import_file_id)
	      order by pc.action_Type asc, pc.SUBMITTER_USER_ID asc,pc.SUBMITTER_USER_NAME asc
	    ]]>
	  </sql-query>  
  
</hibernate-mapping>