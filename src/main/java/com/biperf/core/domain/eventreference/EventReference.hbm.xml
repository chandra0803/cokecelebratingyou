<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping auto-import="false">
  <class name="com.biperf.core.domain.eventreference.EventReference" table="EVENT_REFERENCE">
    <!-- This is the surrogate primary key.  Make sure the column and sequence names are correct. -->
    <id name="id" type="java.lang.Long" column="ID">
      <generator class="seqhilo">
        <param name="max_lo">0</param> <param name="sequence">EVENT_REFERENCE_PK_SQ</param>
      </generator>
    </id> 
    <!-- Using version number optimistic locking -->
    <version name="version" column="VERSION" type="java.lang.Long" />
    <!-- The create audit information is handled in the AuditCreateType and AuditInterceptor.  Column order here is important. -->
    <property name="auditCreateInfo" type="com.biperf.core.utils.hibernate.AuditCreateType">
      <column name="DATE_CREATED"/>
      <column name="CREATED_BY"/>
    </property>
    <!-- The update audit information is handled in the AuditUpdateType and AuditInterceptor.  Column order here is important. -->
    <property name="auditUpdateInfo" type="com.biperf.core.utils.hibernate.AuditUpdateType">
      <column name="DATE_MODIFIED"/>
      <column name="MODIFIED_BY"/>
    </property>
    
    <property name="companyId" type="uuid-char" column="COMPANY_ID" not-null="true" />
    
    <property name="applicationName" type="java.lang.String" column="APPLICATION_NAME" />
    
    <property name="schemaName" type="java.lang.String" column="SCHEMA_NAME" />
    
    <property name="eventName" type="java.lang.String" column="EVENT_NAME" />
    
    <property name="state" type="java.lang.String" column="STATE" />
    
    <property name="recipientId" column="RECIPIENT_ID" type="java.lang.Long" />
    
    <property name="log" column="LOG" type="text"/>
    
    <property name="data" column="DATA" type="text"/>
    
    <property name="message" type="java.lang.String" column="MESSAGE"/>
    
    <property name="comments" type="java.lang.String" column="COMMENTS"/>
    
    <property name="checksum" type="java.lang.String" column="CHECKSUM" />
    
  </class>
  
  <sql-query name="com.biperf.core.domain.eventreference.GetEvents">
    <return alias="event" class="com.biperf.core.domain.eventreference.EventReference" />
    <![CDATA[
    	SELECT {event.*} 
	      FROM EVENT_REFERENCE event
	     WHERE event.STATE=:state
			AND DECODE(:appName,NULL,'***',event.APPLICATION_NAME)=DECODE(:appName,NULL,'***',:appName)
			AND DECODE(:schName,NULL,'***',event.SCHEMA_NAME)=DECODE(:schName,NULL,'***',:schName)
			AND DECODE(:evtName,NULL,'***',event.EVENT_NAME)=DECODE(:evtName,NULL,'***',:evtName)
			AND DECODE(:state,NULL,'***',event.STATE)=DECODE(:state,NULL,'***',:state)
		ORDER BY ID DESC
			OFFSET :startRow ROWS FETCH NEXT :noOfRows ROWS ONLY
		]]>
  </sql-query>
  
  <sql-query name="com.biperf.core.domain.eventreference.GetEventsCount">
    <return-scalar column="result" type="integer" />
    <![CDATA[
    	SELECT count(*) as result
	      FROM EVENT_REFERENCE event
	     WHERE event.STATE=:state
			AND DECODE(:appName,NULL,'***',event.APPLICATION_NAME)=DECODE(:appName,NULL,'***',:appName)
			AND DECODE(:schName,NULL,'***',event.SCHEMA_NAME)=DECODE(:schName,NULL,'***',:schName)
			AND DECODE(:evtName,NULL,'***',event.EVENT_NAME)=DECODE(:evtName,NULL,'***',:evtName)
			AND DECODE(:state,NULL,'***',event.STATE)=DECODE(:state,NULL,'***',:state)
		ORDER BY ID DESC
		]]>
  </sql-query>
  
  <sql-query name="com.biperf.core.domain.eventreference.GetEventsSource">
   	<return-scalar column="EVENT_NAME" type="string"/>
  	<return-scalar column="SCHEMA_NAME" type="string"/>
  	<return-scalar column="APPLICATION_NAME" type="string"/>
    <![CDATA[
    	SELECT distinct event.EVENT_NAME, event.SCHEMA_NAME, event.APPLICATION_NAME 
	      FROM EVENT_REFERENCE event 
		ORDER BY event.APPLICATION_NAME, event.SCHEMA_NAME
		]]>
  </sql-query>
  
  <sql-query name="com.biperf.core.domain.eventreference.GetLastDayEventsByState">
    <return alias="event" class="com.biperf.core.domain.eventreference.EventReference" />
    <![CDATA[
    	SELECT {event.*} 
	      FROM EVENT_REFERENCE event
		 WHERE DECODE(:state,NULL,'***',event.STATE)=DECODE(:state,NULL,'***',:state) and  trunc(event.date_created) = trunc(sysdate -1)
		ORDER BY ID DESC
		]]>
  </sql-query>
  
  <sql-query name="com.biperf.core.domain.eventreference.GetCountOfLastDayEventsByState">
    <return-scalar column="result" type="integer" />
    <![CDATA[
    	SELECT count(*) as result
	      FROM EVENT_REFERENCE event
		 WHERE DECODE(:state,NULL,'***',event.STATE)=DECODE(:state,NULL,'***',:state) and  trunc(event.date_created) = trunc(sysdate -1)
		]]>
  </sql-query>
	
</hibernate-mapping>
