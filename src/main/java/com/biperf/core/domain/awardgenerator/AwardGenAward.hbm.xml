<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>

    <class name="com.biperf.core.domain.awardgenerator.AwardGenAward" table="AWARDGEN_AWARD">

        <id name="id" type="java.lang.Long" column="AWARDGEN_AWARD_ID">
            <generator class="seqhilo">
                <param name="max_lo">0</param> <param name="sequence">AWARDGEN_AWARD_PK_SQ</param>
            </generator>
        </id>

        <version name="version" column="VERSION" type="java.lang.Long" />

        <property name="awardAmount" type="java.lang.Long" column="AWARD_AMOUNT" />
        <property name="years" type="java.lang.Integer" column="YEARS"/>
        <property name="days" type="java.lang.Integer" column="DAYS"/>
        <property name="deleted" type="boolean" column="DELETED"/>
                           
		<many-to-one name="level" column="LEVEL_ID" class="com.biperf.core.domain.promotion.PromoMerchProgramLevel" lazy="false"/>          
 		<many-to-one name="awardGen" column="AWARDGEN_ID" class="com.biperf.core.domain.awardgenerator.AwardGenerator" not-null="true" lazy="false"/>

   	    <!-- The create audit information is handled in the AuditCreateType and AuditInterceptor.  Column order here is important. -->
        <property name="auditCreateInfo" type="com.biperf.core.utils.hibernate.AuditCreateType">
            <column name="DATE_CREATED"/>
            <column name="CREATED_BY"/>
        </property>

        <!-- The update audit information is handled in the AuditUpdateType and AuditInterceptor.  Column order here is important. -->
        <property name="auditUpdateInfo" type="com.biperf.core.utils.hibernate.AuditUpdateType">
            <column name="DATE_MODIFIED"/>
            <column name="MODIFIED_BY"/>
        </property>

    </class>
    
    <sql-query name="com.biperf.core.domain.awardgenerator.AwardGenAward.getAllAwardsByAwardGenIdAndYears">
    <return alias="award" class="com.biperf.core.domain.awardgenerator.AwardGenAward"/>
  	<![CDATA[
        select {award.*} 
        from awardgen_award award
		where award.awardgen_id = :awardGenId
		and award.years = :years
		and award.deleted = 0
  	]]>
    </sql-query>
    
    <sql-query name="com.biperf.core.domain.awardgenerator.AwardGenAward.getAllAwardsByAwardGenIdAndDays">
    <return alias="award" class="com.biperf.core.domain.awardgenerator.AwardGenAward"/>
  	<![CDATA[
        select {award.*} 
        from awardgen_award award
		where award.awardgen_id = :awardGenId
		and award.days = :days
		and award.deleted = 0
  	]]>
    </sql-query>
        
    <sql-query name="com.biperf.core.domain.awardgenerator.AwardGenAward.getAllYearsByAwardGenId">
    <return-scalar column="YEARS" type="string"/>
  	<![CDATA[
        select unique years 
        from awardgen_award award
		where award.awardgen_id = :awardGenId
		and award.years > 0
		and award.deleted = 0
  	]]>
    </sql-query>
    
    <sql-query name="com.biperf.core.domain.awardgenerator.AwardGenAward.getAllDaysByAwardGenId">
    <return-scalar column="DAYS" type="string"/>
  	<![CDATA[
        select unique days 
        from awardgen_award award
		where award.awardgen_id = :awardGenId
		and award.days > 0
		and award.deleted = 0
  	]]>
    </sql-query>

</hibernate-mapping>