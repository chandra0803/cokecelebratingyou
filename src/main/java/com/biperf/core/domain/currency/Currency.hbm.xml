<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="com.biperf.core.domain.currency.Currency" table="CURRENCY">

        <!-- This is the surrogate primary key.  Make sure the column and sequence names are correct. -->
		<id name="id" type="java.lang.Long" column="CURRENCY_ID">
		    <generator class="seqhilo">
		    	<param name="max_lo">0</param> <param name="sequence">CURRENCY_PK_SQ</param>
	        </generator>
	    </id>

        <!-- Using version number optimistic locking -->
       <version name="version" column="VERSION" type="java.lang.Long" />

	    <!-- The create audit information is handled in the AuditCreateType and AuditInterceptor.  Column order here is important. -->
      	<property name="auditCreateInfo" type="com.biperf.core.utils.hibernate.AuditCreateType">
        	<column name="DATE_CREATED"/>
        	<column name="CREATED_BY"/>
      	</property>
		
		<!-- The update audit information is handled in the AuditUpdateType and AuditInterceptor.  Column order here is important. -->
	    <property name="auditUpdateInfo" type="com.biperf.core.utils.hibernate.AuditUpdateType">
	      <column name="DATE_MODIFIED"/>
	      <column name="MODIFIED_BY"/>
	    </property>
	    
        <property name="cmAssetName" type="java.lang.String" column="CM_ASSET_NAME"/>
        <property name="currencyCode" type="java.lang.String" column="CURRENCY_CODE"/>
        <property name="currencySymbol" type="java.lang.String" column="CURRENCY_SYMBOL"/>
        <property name="status" type="java.lang.String" column="STATUS"/>            
    </class>	
	
	<sql-query name="com.biperf.core.domain.currency.CurrencyNameExistsCount">
	<return-scalar column="result" type="integer" />
		<![CDATA[
		select count(1) as result
        	from (
        	select (SELECT cms_value FROM vw_cms_asset_value 
        	WHERE locale  =:locale AND KEY ='NAME'
        	AND asset_code = CM_ASSET_NAME) as cmValueContestName
        	from currency 
        	where currency_id != NVL(:currencyId, currency_id)) 
        	where lower(cmValueContestName) = lower(:currencyName)
        ]]>
	</sql-query>
	
</hibernate-mapping>
