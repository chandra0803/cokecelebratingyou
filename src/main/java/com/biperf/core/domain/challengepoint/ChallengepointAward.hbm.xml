<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="com.biperf.core.domain.challengepoint.ChallengepointAward" table="CHALLENGEPOINT_AWARD">

		<!-- This is the surrogate primary key.  Make sure the column and sequence names are correct. -->
		<id name="id" column="CHALLENGEPOINT_AWARD_ID" type="java.lang.Long">
			<generator class="seqhilo">
				<param name="max_lo">0</param> <param name="sequence">CHALLENGEPOINT_AWARD_PK_SQ</param>
			</generator>
		</id>

		<!-- Using version number optimistic locking -->
		<version name="version" type="java.lang.Long" column="VERSION" />	
				 		
		<!-- participant -->
		<many-to-one name="participant" column="USER_ID" not-null="true" 
			class="com.biperf.core.domain.participant.Participant" lazy="proxy">
		</many-to-one>
		
		<!-- promotion -->
		<many-to-one name="challengePointPromotion" column="PROMOTION_ID" not-null="true" 
			class="com.biperf.core.domain.promotion.ChallengePointPromotion" lazy="proxy">
		</many-to-one>
				
		<!-- progress result -->
		<property name="result" column="RESULT" type="java.math.BigDecimal" />

        <!-- award type-->
	    <property name="awardType" column="AWARD_TYPE" type="java.lang.String" />
		

		<!-- award earned on basic -->
	    <property name="awardEarned" column="AWARD_EARNED" type="java.lang.Long" />
		
		<!-- Award issued -->
		<property name="awardIssued" column="AWARD_ISSUED" type="java.lang.Long" />

        <!-- Total Award issued -->
        <property name="totalAwardIssued" column="TOTAL_AWARD_ISSUED" type="java.lang.Long" />
        <!-- Related Journal entry -->
       <many-to-one name="journal" column="JOURNAL_ID" class="com.biperf.core.domain.journal.Journal" unique="true"  lazy="false"/>
		<!-- The create audit information is handled in the AuditCreateType and AuditInterceptor.  Column order here is important. -->
		<property name="auditCreateInfo"
			type="com.biperf.core.utils.hibernate.AuditCreateType">
			<column name="DATE_CREATED" />
			<column name="CREATED_BY" />
		</property>

		<!-- The update audit information is handled in the AuditUpdateType and AuditInterceptor.  Column order here is important. -->
		<property name="auditUpdateInfo"
			type="com.biperf.core.utils.hibernate.AuditUpdateType">
			<column name="DATE_MODIFIED" />
			<column name="MODIFIED_BY" />
		</property>
	</class>
	
   <query name="com.biperf.core.domain.challengepoint.ChallengepointAwardByUserIdAndPromotionId">
		<![CDATA[
      from item in class com.biperf.core.domain.challengepoint.ChallengepointAward
      where item.participant.id = :userId and item.challengePointPromotion.id = :promotionId
   and item.awardType='challengepoint' order by  item.id desc
    ]]>
	</query>
	 <query name="com.biperf.core.domain.challengepoint.AllAwardByUserIdAndPromotionId">
		<![CDATA[
      from item in class com.biperf.core.domain.challengepoint.ChallengepointAward
      where item.participant.id = :userId and item.challengePointPromotion.id = :promotionId
      order by  item.id desc
    ]]>
	</query>
		
   <query name="com.biperf.core.domain.challengepoint.BasicAwardByUserIdAndPromotionId">
        <![CDATA[
      from item in class com.biperf.core.domain.challengepoint.ChallengepointAward
      where item.participant.id = :userId and item.challengePointPromotion.id = :promotionId
   and item.awardType='basic' order by  item.id desc
    ]]>
    </query>
   <sql-query name="com.biperf.core.domain.challengepoint.SumBasicAwardByUserIdAndPromotionId">
		<return-scalar column="result" type="long"/> 
        <![CDATA[
        select sum(item.award_issued) result
      from challengepoint_award item
      where item.user_id = :userId and item.promotion_id = :promotionId
      and item.award_type='basic'
    ]]>
    </sql-query>
    <sql-query name="com.biperf.core.domain.challengepoint.CPActivityByPromotionAndUserIdWithPayout">
    <return-scalar column="result" type="boolean"/> 
    <![CDATA[
       select distinct 1 as result
       from   challengepoint_award item
       where  item.user_id = :userId and item.promotion_id = :promotionId
       and    item.award_type= :awardType
       and    item.journal_id is not null
    ]]>
    </sql-query>	
      
</hibernate-mapping>

