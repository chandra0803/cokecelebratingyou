{"version":3,"sources":["../../../core/base/scss/partials/_colors.scss","../../../core/base/scss/partials/_variables.scss","../../../core/base/scss/partials/_mixins.scss","../../../core/base/scss/jhtmlArea.scss","jhtmlArea.css"],"names":[],"mappings":"AAgCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2DE;AAmBF;;;;;;;EAOE;AC3GF;;;;;;;;;;;;GAYG;AAsGH;;;;;;;;;GASG;AAKH;;;;;;;;;;;;GAYG;AAKH;;;;;;;;;;;;;;;EAeE;AC+TF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuDE;AAwVF;;;;;;;;GAQG;AAqEH;;;;;;;;;;;;;GAaG;AAoMH;;;;;GAKG;AAsBH;;;;GAIG;ACrrCH,iEAAiE;AHgCjE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2DE;AAmBF;;;;;;;EAOE;AC3GF;;;;;;;;;;;;GAYG;AAsGH;;;;;;;;;GASG;AAKH;;;;;;;;;;;;GAYG;AAKH;;;;;;;;;;;;;;;EAeE;AC+TF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuDE;AAwVF;;;;;;;;GAQG;AAqEH;;;;;;;;;;;;;GAaG;AAoMH;;;;;GAKG;AAsBH;;;;GAIG;AEhxBH,6EAA6E;ADha7E;EACI,aAAa;EACb,iBAAiB;EACjB,UAAU;CACb;;ACmaD,8EAA8E;ADja9E;EACI,aAAa;EACb,eAAe;EACf,sBAAsB;EACtB,UAAU;EACV,mEFcyE;EEbzE,gBAAgB;EAChB,kBAAkB;EAClB,oCFoL+B;EEnL/B,iBHAoB;EGCpB,eHPuB;CGS1B;;AACD,gHAAgH;AAChH;ECmaE,8EAA8E;EDla5E;IACI,gBAAgB;GACnB;CCoaJ;;AAED,8EAA8E;ADna9E;EACI,iBAAiB;CACpB;;ACsaD,8EAA8E;ADpa9E;;EAEI,YHrBmB;EGsBnB,mBAAmB;CACtB","file":"../../../jhtmlArea.css","sourcesContent":["// BRAND COLORS\n// ============\n$brand_color_primary: #29c3d2 !default;\n$brand_color_secondary: #083c5a !default;\n$brand_color_tertiary: #76508e !default;\n\n// MESSAGING COLORS\n// ============\n$brand_color_success: #5fce8a !default; // green\n$brand_color_warning: #f0cb5b !default; // yellow\n$brand_color_alert: #e7605c !default; // red\n\n// GRASCALE STACK\n// ============\n$brand_color_black: #353a40 !default;\n$brand_color_darker: #666 !default;\n$brand_color_dark: #999 !default;\n$brand_color_mid: #ccc !default;\n$brand_color_light: #e8e8e8 !default;\n$brand_color_lighter: #efefef !default;\n$brand_color_white: #fff !default;\n\n// OTHER COLORS\n// ============\n$brand_color_stripe: #f8f8f8 !default;\n$brand_color_border: $brand_color_mid !default;\n\n$brand_color_export_csv: #0D7136 !default; // same as XLS for now. Try #CD8042 to match the brown/gold we had in G5\n$brand_color_export_doc: #295A99 !default;\n$brand_color_export_pdf: #d40000 !default;\n$brand_color_export_xls: #0D7136 !default;\n\n/*\n\nBRAND COLORS\n============\n\nTeal (Primary)\n#29c3d2\n\nNavy (secondary)\n#083c5a\n\nPurple (tertiary)\n#76508e\n\n\nMESSAGING COLORS\n============\n\nSalmon (alert)\n#e7605c\n\nYellow (warning)\n#f0cb5b\n\nGreen\n#5fce8a\n\n\nGRAYSCALE STACK\n===============\n\nBlack (branded)\n#353a40\n\nDarker Gray\n#666666\n\nDark Gray\n#999999\n\nGray\n#cccccc\n\nLight Gray\n#e8e8e8\n\nLighter Gray\n#efefef\n\nWhite (branded)\n#ffffff\n\n\nOTHER COLORS\n============\n\nStripes\n#f8f8f8\n\n*/\n\n// LINKS\n// ============\n$brand_color_link: #246369 !default;\n$brand_color_link_hover: #2f838b !default;\n$brand_color_link_active: $brand_color_link_hover !default;\n$brand_color_link_disabled: #a9ced2 !default;\n\n// SPINNERS\n// ============\n$brand_color_spinner_fg: $brand_color_white !default;\n$brand_color_spinner_bg: rgba(0, 0, 0, .33) !default;\n\n// FUSIONCHARTS\n// ============\n// note: clients can submit a list of hex values for their charts. Set to false to use the FC default palette\n// sample color stack commented out below\n$brand_chartColors: false !default;\n/*\n$brand_chartColors: $brand_color_primary,\n                     $brand_color_secondary,\n                     $brand_color_tertiary,\n                     scale-color($brand_color_primary, $lightness: 50%, $saturation: -50%),\n                     scale-color($brand_color_secondary, $lightness: 50%, $saturation: -50%),\n                     scale-color($brand_color_tertiary, $lightness: 50%, $saturation: -50%) !default;\n*/\n\n// AVATAR\n// ============\n$brand_color_avatarTextColor: $brand_color_white !default;\n$brand_color_avatarBkg: $brand_color_primary !default;\n\n\n\n// overwritting twitter default colors - should slowly move away from these and use brand colors\n// and don't add below styles to new scss G6 2016 - if needed move above or to respective file\n// TODO: clean up what is not used\n\n// Grays\n// -------------------------\n$black:                 $brand_color_black !default;\n$grayDarker:            $brand_color_darker !default;\n$grayDark:              $brand_color_dark !default;\n$gray:                  $brand_color_mid !default;\n$grayLight:             $brand_color_light !default;\n$grayLighter:           $brand_color_lighter !default;\n$white:                 $brand_color_white !default;\n\n\n// Scaffolding\n// -------------------------\n$bodyBackground:        $brand_color_white !default;\n$textColor:             $brand_color_black !default;\n\n\n// Links\n// -------------------------\n$linkColor:             $brand_color_link !default;\n$linkColorHover:        $brand_color_link_hover !default;\n\n\n// Form states and alerts\n// -------------------------\n$warningText:             $brand_color_warning !default;\n$warningBackground:       scale-color($warningText, $lightness: 75%) !default;\n$warningBorder:           $warningBackground !default;\n\n$errorText:               $brand_color_alert !default;\n$errorBackground:         scale-color($errorText, $lightness: 75%) !default;\n$errorBorder:             $errorBackground !default;\n\n$successText:             $brand_color_success !default;\n$successBackground:       scale-color($successText, $lightness: 75%) !default;\n$successBorder:           $successBackground !default;\n\n$infoText:                $brand_color_secondary !default;\n$infoBackground:          scale-color($infoText, $lightness: 75%) !default;\n$infoBorder:              $infoBackground !default;\n\n$placeholderText:         $brand_color_dark !default;\n\n\n// Pagination\n// -------------------------\n$paginationBackground:                transparent !default;\n$paginationBorder:                    transparent !default;\n$paginationActiveBackground:          $brand_color_primary !default;\n\n\n// Tables\n// -------------------------\n// set in _variables.scss\n// $tableBackground:                   transparent !default; // overall background-color\n// $tableBackgroundAccent:             #f9f9f9 !default; // for striping\n// $tableBackgroundHover:              #f5f5f5 !default; // for hover\n// $tableBorder:                       #ddd !default; // table and cell border\n\n\n// Buttons\n// -------------------------\n// button variables that get passed into Bootstrap's _buttons.scss go in this file\n    // note: *Highlight background colors are used for hover state\n// button variables that are used to override Bootstrap's styles go in G6's _buttons.scss\n$buttonLinkColor:                   $brand_color_link !default;\n$buttonLinkColorHover:              $brand_color_link_hover !default;\n\n$btnTxtColor:                       $brand_color_black !default;\n$btnBackground:                     $brand_color_mid !default;\n$btnBackgroundHighlight:            desaturate(darken($brand_color_mid, 20%), 10%) !default;\n$btnBorder:                         $btnBackground !default;\n\n$btnPrimaryTxtColor:                $brand_color_white !default;\n$btnPrimaryBackground:              $brand_color_primary !default;\n$btnPrimaryBackgroundHighlight:     desaturate(darken($brand_color_primary, 20%), 10%) !default;\n\n$btnInfoTxtColor:                   $brand_color_white !default;\n$btnInfoBackground:                 $brand_color_secondary !default;\n$btnInfoBackgroundHighlight:        desaturate(darken($brand_color_secondary, 20%), 10%) !default;\n\n$btnSuccessTxtColor:                $brand_color_white !default;\n$btnSuccessBackground:              $brand_color_success !default;\n$btnSuccessBackgroundHighlight:     desaturate(darken($brand_color_success, 20%), 10%) !default;\n\n$btnWarningTxtColor:                $brand_color_white !default;\n$btnWarningBackground:              $brand_color_warning !default;\n$btnWarningBackgroundHighlight:     desaturate(darken($brand_color_warning, 20%), 10%) !default;\n\n$btnDangerTxtColor:                 $brand_color_white !default;\n$btnDangerBackground:               $brand_color_alert !default;\n$btnDangerBackgroundHighlight:      desaturate(darken($brand_color_alert, 20%), 10%) !default;\n\n$btnInverseBackground:              transparent !default;\n$btnInverseBackgroundHighlight:     transparent !default;\n\n$invertBtnTxtColor:                 $brand_color_primary !default;\n$invertBtnBackground:               $brand_color_white !default;\n$invertBtnBackgroundHighlight:      desaturate(darken($brand_color_white, 10%), 10%) !default;\n\n\n// Forms\n// -------------------------\n$inputTextColor:                $brand_color_black !default;\n$inputBackground:               $brand_color_white !default;\n$inputBorder:                   $btnBackground !default;\n$inputSearchIconColor:          $brand_color_dark !default;\n// $inputDisabledBackground:       $brand_color_disabled !default;\n\n\n// Dropdowns\n// -------------------------\n$dropdownBackground:            $brand_color_white !default;\n$dropdownBorder:                rgba(0,0,0,.2) !default;\n$dropdownDividerTop:            $brand_color_light !default;\n$dropdownDividerBottom:         $brand_color_white !default;\n\n$dropdownLinkColor:             $brand_color_dark !default;\n$dropdownLinkColorHover:        $brand_color_white !default;\n$dropdownLinkColorActive:       $brand_color_white !default;\n\n$dropdownLinkBackgroundActive:  $linkColor !default;\n$dropdownLinkBackgroundHover:   $dropdownLinkBackgroundActive !default;\n\n\n\n// COMPONENT VARIABLES\n// --------------------------------------------------\n\n\n// Tooltips and popovers\n// -------------------------\n$tooltipColor:            $brand_color_white !default;\n$tooltipBackground:       $brand_color_black !default;\n// $tooltipArrowWidth:       5px !default;\n$tooltipArrowColor:       $tooltipBackground !default;\n\n// $popoverBackground:       #fff !default;\n// $popoverArrowWidth:       10px !default;\n// $popoverArrowColor:       #fff !default;\n// $popoverTitleBackground:  darken($popoverBackground, 3%) !default;\n\n// // Special enhancement for popovers\n// $popoverArrowOuterWidth:  $popoverArrowWidth + 1 !default;\n// $popoverArrowOuterColor:  rgba(0,0,0,.25) !default;\n","$appSourcePath: '' !default;\n\n// application config.rb directory helpers (paths relative to this file, obviously)\n$appCssPath:         $appSourcePath+\"css/\" !default;\n$appSassPath:        $appSourcePath+\"scss/\" !default;\n$appImagesPath:      $appSourcePath+\"img/\" !default;\n$appFontsPath:       $appSourcePath+\"rsrc/\" !default;\n$appJavascriptsPath: $appSourcePath+\"js/\" !default;\n\n\n/***\n *    888888b.                     888             888\n *    888  \"88b                    888             888\n *    888  .88P                    888             888\n *    8888888K.   .d88b.   .d88b.  888888 .d8888b  888888 888d888 8888b.  88888b.       888  888  8888b.  888d888 .d8888b\n *    888  \"Y88b d88\"\"88b d88\"\"88b 888    88K      888    888P\"      \"88b 888 \"88b      888  888     \"88b 888P\"   88K\n *    888    888 888  888 888  888 888    \"Y8888b. 888    888    .d888888 888  888      Y88  88P .d888888 888     \"Y8888b.\n *    888   d88P Y88..88P Y88..88P Y88b.       X88 Y88b.  888    888  888 888 d88P       Y8bd8P  888  888 888          X88\n *    8888888P\"   \"Y88P\"   \"Y88P\"   \"Y888  88888P'  \"Y888 888    \"Y888888 88888P\"         Y88P   \"Y888888 888      88888P'\n *                                                                        888\n *                                                                        888\n *                                                                        888\n */\n// Bootstrap variables (grouped by sections copied from that file)\n// ==================================================\n\n\n// Typography\n// -------------------------\n// Font families - overwrite bootstrap vars\n$sansFontFamily:        'open-sans', \"Helvetica Neue\", Helvetica, Arial, sans !default;\n$serifFontFamily:       Georgia, \"Times New Roman\", Times, serif !default;\n$monoFontFamily:        Monaco, Menlo, Consolas, \"Courier New\", monospace !default;\n\n$baseFontSize:          14px !default;\n$baseFontFamily:        $sansFontFamily !default;\n$baseLineHeight:        21px !default;\n\n$headingsFontFamily:    inherit !default; // empty to use BS default, $baseFontFamily\n$headingsFontWeight:    bold !default;    // instead of browser default, bold\n$headingsColor:         inherit !default; // empty to use BS default, $textColor\n\n\n// Component sizing\n// -------------------------\n// Based on 14px font-size and 20px line-height\n// not all of these are Bootstrap vars, but including them here for ease of reading\n\n$fontSizeExtraLarge:    round($baseFontSize * 1.71) !default; // ~24px\n$fontSizeLarge:         round($baseFontSize * 1.28) !default; // ~18px\n$fontSizeMid:           round($baseFontSize * 1.14) !default; // ~16px\n$fontSizeSmall:         round($baseFontSize * 0.85) !default; // ~12px\n$fontSizeMini:          round($baseFontSize * 0.75) !default; // ~11px\n// Calculation for getting font sizes that aren't already a variable\n// targetPxSize / $baseFontSize = quotient.\n// font-size: $baseFontSize * quotient;\n\n\n// Tables\n// -------------------------\n$tableBackground:                   transparent !default; // overall background-color\n$tableBackgroundAccent:             transparentize($brand_color_mid, 0.67) !default; // for striping\n$tableBackgroundHover:              $brand_color_stripe !default; // for hover\n$tableBorder:                       $brand_color_border !default; // table and cell border\n\n\n// Buttons\n// -------------------------\n// see _colors.scss\n\n\n// Forms\n// -------------------------\n$btnLineHeight:                 16px !default;\n$btnPadding:                    8px 28px !default;\n$btnPaddingLarge:               12px 33px !default;\n$btnPaddingSmall:               3px 18px !default;\n$btnPaddingMini:                1px 6px !default;\n$btnBorderWidth:                2px !default;\n\n$formFieldLineHeight:           $btnLineHeight;\n$formFieldPadding:              nth($btnPadding, 1) 8px !default;\n$formFieldBorderWidth:          $btnBorderWidth !default;\n\n$formActionsBackground:         transparent !default;\n$formActionsBorderWidth:        1px !default;\n$formActionsBorderColor:        $brand_color_border !default;\n$inputHeight:                   $formFieldLineHeight + (nth($formFieldPadding, 1) * 2) + ($formFieldBorderWidth * 2) !default; // base line-height + vertical padding + top/bottom border\n\n\n// FIXED GRID\n// --------------------------------------------------\n\n// Custom, Default 940px grid\n// -------------------------\n$gridColumns:             12 !default;\n$gridColumnWidth:         68px !default;\n$gridGutterWidth:         12px !default;\n\n// Custom, 1200px min\n// -------------------------\n$gridColumnWidth1200:    80px !default;\n$gridGutterWidth1200:    18px !default;\n\n// Custom, 768px-979px\n// -------------------------\n$gridColumnWidth768:     50px !default;\n$gridGutterWidth768:     $gridGutterWidth !default;\n\n\n// COMPONENT VARIABLES\n// --------------------------------------------------\n\n// Sprite icons path\n// -------------------------\n$iconSpritePath:          \"\" !default;\n$iconWhiteSpritePath:     \"\" !default;\n\n\n// Hr border color\n// -------------------------\n$hrBorder:                $brand_color_mid !default;\n\n\n/***\n *    oo                                         dP\n *                                               88\n *    dP 88d8b.d8b. 88d888b. .d8888b. 88d888b. d8888P\n *    88 88'`88'`88 88'  `88 88'  `88 88'  `88   88\n *    88 88  88  88 88.  .88 88.  .88 88         88\n *    dP dP  dP  dP 88Y888P' `88888P' dP         dP\n *                  88\n *                  dP\n */\n// Give access to the Bootstrap variables\n@import \"bootstrap/variables\";\n\n\n/***\n *     .d8888b.   .d8888b.\n *    d88P  Y88b d88P  Y88b\n *    888    888 888\n *    888        888d888b.       888  888  8888b.  888d888 .d8888b\n *    888  88888 888P \"Y88b      888  888     \"88b 888P\"   88K\n *    888    888 888    888      Y88  88P .d888888 888     \"Y8888b.\n *    Y88b  d88P Y88b  d88P       Y8bd8P  888  888 888          X88\n *     \"Y8888P88  \"Y8888P\"         Y88P   \"Y888888 888      88888P'\n *\n *\n *\n */\n// G5 variables (grouped roughly by logical sense)\n// ==================================================\n\n// BREAKPOINTS - mobile first\n/*\n * use\n\n.mobileSizesDefault {\n    // ALL MOBILE SIZES and up should be default styles\n}\n@media (min-width: $breakpoint_tablet_min) {\n    //TABLET SIZES - and up\n}\n@media (min-width: $breakpoint_desktop_min) {\n   //DESKTOP SIZES - and up\n}\n@media (min-width: $breakpoint_desktopLarge_min) {\n    //DESKTOP LARGE\n}\n*/\n$breakpoint_mobileMini_min: 480px;\n$breakpoint_tablet_min: 768px;\n$breakpoint_desktop_min: 1025px; // intentionally 1px bigger than expected\n$breakpoint_desktopLarge_min: 1536px; // intentionally 1px bigger than expected\n$breakpoint_siteMax_min: 1921px; // intentionally 1px bigger than expected\n\n// ADDING Max sizes as well for backwards compatability\n$breakpoint_mobileMini_max:   $breakpoint_mobileMini_min - 1;\n$breakpoint_mobile_max:       $breakpoint_tablet_min - 1;\n$breakpoint_tablet_max:       $breakpoint_desktop_min - 1;\n$breakpoint_desktop_max:      $breakpoint_desktopLarge_min - 1;\n$breakpoint_desktopLarge_max: $breakpoint_siteMax_min - 1;\n\n\n// Utils\n// -------------------------\n$animation_duration: 300ms !default;\n\n// Typography\n// -------------------------\n// Font Weights\n$fontWeightLight:       100 !default;\n$fontWeightNormal:      normal !default;\n$fontWeightBold:        bold !default;\n$fontWeightSemiBold:    600 !default;\n$fontWeightExBold:      900 !default;\n\n// font smoothing\n$webkitFontSmoothing:   antialiased !default;\n\n$lineHeightExtraLarge:  round($baseLineHeight / $baseFontSize * $fontSizeExtraLarge) !default; // ~36px\n$lineHeightLarge:       round($baseLineHeight / $baseFontSize * $fontSizeLarge) !default; // ~27px\n$lineHeightMid:         round($baseLineHeight / $baseFontSize * $fontSizeMid) !default; // ~24px\n$lineHeightSmall:       round($baseLineHeight / $baseFontSize * $fontSizeSmall) !default; // ~18px\n$lineHeightMini:        round($baseLineHeight / $baseFontSize * $fontSizeMini) !default; // ~16px\n\n$titleFont: $headingsFontFamily !default;\n$titleFontWeightLight: $fontWeightLight !default;\n$titleFontWeightNormal: normal !default;\n$titleFontWeightBold: bold !default;\n$titleFontWeight: $titleFontWeightNormal !default;\n$bodyFont: $sansFontFamily !default;\n\n$headline2fontSize_mobile: round($baseFontSize * 2.14) !default; //~36px\n$headline3fontSize_mobile: round($baseFontSize * 1.57) !default; //~22px\n$headline4fontSize_mobile: round($baseFontSize * 1.29) !default; //~18px\n$headline5fontSize_mobile: round($baseFontSize * 1.29) !default; //~18px\n$headline6fontSize_mobile: round($baseFontSize * 1.14) !default; //~16px\n\n$headline2fontSize: round($baseFontSize * 3.43) !default; //~48px\n$headline3fontSize: round($baseFontSize * 2.14) !default; //~30px\n$headline4fontSize: round($baseFontSize * 1.71) !default; //~24px\n$headline5fontSize: round($baseFontSize * 1.71) !default; //~24px\n$headline6fontSize: round($baseFontSize * 1.14) !default; //~16px\n\n$headlineLineHeight: 1.125 !default;\n$headlineMarginY: $headlineLineHeight / 2 !default;\n\n$headline2fontWeight: $fontWeightLight !default;\n$headline3fontWeight: $fontWeightBold !default;\n$headline4fontWeight: $fontWeightBold !default;\n$headline5fontWeight: $fontWeightNormal !default;\n$headline6fontWeight: $fontWeightSemiBold !default;\n\n$headline2fontFamily: $titleFont !default;\n$headline3fontFamily: $titleFont !default;\n$headline4fontFamily: false !default;\n$headline5fontFamily: false !default;\n$headline6fontFamily: false !default;\n\n// links\n$linkFontWeight: $fontWeightBold !default;\n$linkFontStyle: none !default;\n$linkTextDecoration: none !default;\n$linkTextTransform: none !default;\n$linkBgColor: transparent !default;\n$linkBorder: false !default; // applies to border-bottom only\n\n$linkFontWeightHover: false !default;\n$linkFontStyleHover: false !default;\n$linkTextDecorationHover: false !default;\n$linkTextTransformHover: false !default;\n$linkBgColorHover: transparent !default;\n$linkBorderHover: false !default; // applies to border-bottom only\n\n\n// LAUNCH APP\n// G6 modules\n// mobile first approach\n// --------------------------------------------------\n$g6ModulePaddingY: 45px !default;\n$g6ModulePaddingX: 20px !default;\n$g6ModulePaddingY_tablet: 50px !default;\n$g6ModulePaddingX_tablet: 50px !default;\n$g6ModulePaddingY_desktop: 70px !default;\n$g6ModulePaddingX_desktop: 70px !default;\n$g6ModulePaddingY_desktopLarge: 70px !default;\n$g6ModulePaddingX_desktopLarge: 70px !default;\n\n\n// PAGE PADDING\n// G6 pages\n// mobile first approach\n// --------------------------------------------------\n$g6PagePaddingY:              $g6ModulePaddingY !default;\n$g6PagePaddingX:              $g6ModulePaddingX !default;\n$g6PagePaddingY_tablet:       $g6ModulePaddingY_tablet !default;\n$g6PagePaddingX_tablet:       $g6ModulePaddingX_tablet !default;\n$g6PagePaddingY_desktop:      $g6ModulePaddingY_desktop !default;\n$g6PagePaddingX_desktop:      $g6ModulePaddingX_desktop !default;\n$g6PagePaddingY_desktopLarge: $g6ModulePaddingY_desktopLarge !default;\n$g6PagePaddingX_desktopLarge: $g6ModulePaddingX_desktopLarge !default;\n\n\n// HEADER/NAV BORDERS\n// G6 nav and pages\n// mobile first approach\n// --------------------------------------------------\n$g6HeadNavBorderWidth:              1px !default;\n$g6HeadNavBorderWidth_tablet:       $g6HeadNavBorderWidth !default;\n$g6HeadNavBorderWidth_desktop:      $g6HeadNavBorderWidth !default;\n$g6HeadNavBorderWidth_desktopLarge: $g6HeadNavBorderWidth !default;\n$g6HeadNavBorderColor: $brand_color_border !default;\n\n\n// Horizontal padding of page content, 960px\n// -------------------------\n$g5PageContentPaddingHoriz: $g6PagePaddingX_desktop !default;\n$g5PageContentLeftRightBorderWidth: 0; // removed !default so it can't be overwritten\n\n// Horizontal padding of page content, 768px\n// -------------------------\n$g5PageContentPaddingHoriz768: $g6PagePaddingX_tablet !default;\n$g5PageContentLeftRightBorderWidth768: 0; // removed !default so it can't be overwritten\n\n// Horizontal padding of page content, 1200px\n// -------------------------\n$g5PageContentPaddingHoriz1200: $g6PagePaddingX_desktopLarge !default;\n$g5PageContentLeftRightBorderWidth1200: 0; // removed !default so it can't be overwritten\n\n// Horizontal padding of page content, Mobile\n// -------------------------\n$g5PageContentPaddingHorizMobile: $g6PagePaddingX !default;\n\n// Vertical spacing of content sections\n// -------------------------\n$g5PageContentSpacingVertical: $g6PagePaddingY_desktop !default;\n\n//Vertical padding of page topper, 1200px\n// -------------------------\n$g5PageTopperPaddingVert1200: $g6PagePaddingY_desktopLarge !default;\n\n\n// HOME APP\n// legacy variables for leftover G5 modules (Throwdown, Celebration)\n// --------------------------------------------------\n$g5ModuleGutter: 0px !default;\n$g5ModuleUnit: 160px !default;\n$g5ModulePadding: 18px !default;\n\n$g5ModuleBgColor: $brand_color_white !default;\n$g5ModuleGradType: none !default;\n$g5ModuleGradMeta: to bottom !default;\n// NOTE: the module_moduleLinerBackground() mixin takes a false value and turns it into a string that looks like this: (lighten($bgColor, 17%), $bgColor)\n// It proved to be too difficult (impossible?) to set this variable as a calculated list that would dynamically take the background color\n$g5ModuleGradStops: false !default;\n\n$g5ModuleIconColor: $brand_color_primary !default;\n$g5ModuleTitleColor: $brand_color_primary !default;\n$g5ModuleTitleFontFamily: $titleFont !default;\n$g5ModuleTitleFontStyle: false !default;\n$g5ModuleTitleTextTransform: false !default;\n// NOTE: these must be a list of five values, corresponding respectively to 1x1, 2x1, 2x2, 4x2, 4x4 modules sizes.\n// By default, 4x2 uses the same font size and weight as 2x2, which is why it is passed as false.\n$g5ModuleTitleFontSizes: 18px, 24px, 40px, false, 64px !default;\n$g5ModuleTitleFontWeights: $titleFontWeightBold, $titleFontWeightBold, $titleFontWeightNormal, false, $titleFontWeightLight !default;\n\n$g5ModuleVisitAppButtonOffset: max($g5ModuleGutter, 6px) * 1.5 !default;\n\n// HOME APP AND PAGES\n// --------------------------------------------------\n$g5ModPgBorderWidth: 0 !default;\n$g5ModPgBorderColor: $brand_color_border !default;\n$g5ModPgTopperBgColor: $brand_color_mid !default;\n\n\n// FIXED GRID\n// --------------------------------------------------\n$g5GridGutterHeight: $gridGutterWidth * 1.5 !default;\n$g5GridGutterHeight768: $gridGutterWidth768 * 1.5 !default;\n$g5GridGutterHeight1200: $gridGutterWidth1200 * 1.5 !default;\n\n\n// COMPONENTS\n// -------------------------\n$progressBar_baseBorderRadius: 0 !default;\n$spinner_widthHeight: 60px !default;\n$spinner_bgBorderRadius: 50% !default;\n\n$card_backgroundColor: $brand_color_white !default;\n$card_borderRadius: 6px !default;\n$card_boxShadow: 0 0 10px rgba(0,0,0,0.1875) !default;\n\n$card_padding:              ($g6ModulePaddingY / 2)        $g6ModulePaddingX !default;\n$card_padding_tablet:       ($g6ModulePaddingY_tablet / 2) ($g6ModulePaddingX_tablet / 2) !default;\n// half the desktop or desktopLarge padding was far too big, so we get the bigger of tablet/2 or desktop/3\n// when applying padding in @media queries, checking to see if desktop padding != tablet padding can save a lot of code that doesn't need to be generated\n$card_padding_desktop:      max(nth($card_padding_tablet, 1), ($g6ModulePaddingY_desktop / 3))       max(nth($card_padding_tablet, 2), ($g6ModulePaddingX_desktop / 3)) !default;\n$card_padding_desktopLarge: max(nth($card_padding_desktop, 1), ($g6ModulePaddingY_desktopLarge / 3)) max(nth($card_padding_desktop, 2), ($g6ModulePaddingX_desktopLarge / 3)) !default;\n\n$card_margin:              $card_padding !default;\n$card_margin_tablet:       $card_padding_tablet !default;\n$card_margin_desktop:      $card_padding_desktop !default;\n$card_margin_desktopLarge: $card_padding_desktopLarge !default;\n\n$card_avatarSize_default: 100px !default;\n$card_avatarSize_large:   160px !default;\n$card_avatarSize_small:   60px !default;\n$card_avatarSize_mini:    40px !default;\n\n$card_width:         256px !default;\n$card_height_tall:   400px !default;\n$card_height_medium: $card_height_tall - 40px !default;\n$card_height_short:  $card_height_medium - 40px !default;\n\n\n$modal_padding:              $card_padding !default;\n$modal_padding_tablet:       $card_padding_tablet !default;\n$modal_padding_desktop:      $card_padding_desktop !default;\n$modal_padding_desktopLarge: $card_padding_desktopLarge !default;\n\n$modal_bgColor: $brand_color_white !default;\n$modal_borderWidth: 0px !default;\n$modal_borderColor: transparent !default;\n$modal_borderRadius: 6px !default;\n\n\n// AVATARS\n// --------------------------------------------------\n$g5AvatarBg: $brand_color_avatarBkg !default;\n\n\n// ICONOGRAPHY\n// --------------------------------------------------\n\n// Export icons\n// -------------------------\n$exportIconWidth: 40px !default;\n$exportIconHeight: $inputHeight !default;\n","// GIVE ACCESS TO THE BOOTSTRAP MIXINS IF NEEDED\n@import \"bootstrap/mixins\";\n\n// calculate the width of the homeApp container depending on the number of available columns to show\n@function homeAppContainer($cols) {\n    @return $cols * $g5ModuleUnit - $g5ModuleGutter * 2;\n}\n\n\n@mixin centerer($horizontal: true, $vertical: true) {\n  position: absolute;\n  @if ($horizontal and $vertical) {\n    top: 50%;\n    left: 50%;\n    @include transform(translate(-50%, -50%));\n  } @else if ($horizontal) {\n    left: 50%;\n    @include transform(translate(-50%, 0));\n  } @else if ($vertical) {\n    top: 50%;\n    @include transform(translate(0, -50%));\n  }\n}\n\n@mixin vertical-align($position: relative) {\n  position: $position;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n}\n@mixin remove-vertical-align($position: initial) {\n  position: $position;\n  top: auto;\n  top: initial;\n  -webkit-transform:none;\n  -ms-transform: none;\n  transform: none;\n}\n// for the module liner to calculate the sizes\n@mixin module_moduleLiner(\n    $cols,\n    $rows,\n    $borderWidth: 0\n) {\n    width : initial;//($g5ModuleUnit * $cols) - (2 * $g5ModuleGutter) - (2 * $borderWidth);\n    @if($rows){\n        height : ($g5ModuleUnit * $rows) - (2 * $g5ModuleGutter) - (2 * $borderWidth);\n    }\n}\n\n// module liner backgrounds\n@mixin module_moduleLinerBackground(\n    $bgColor: $g5ModuleBgColor,\n    $gradType: $g5ModuleGradType,\n    $gradMeta: $g5ModuleGradMeta,\n    $gradStops: $g5ModuleGradStops,\n    $force: false\n) {\n    // check to see if any of the arguments have been passed values that are non-default OR if we're forcing this to run.\n    // because _allModules.scss sets the properties of every module to the global values, we don't need to run this mixin on a per-app basis unless it introduces custom values. Saves on code.\n    @if $bgColor != $g5ModuleBgColor or $gradType != $g5ModuleGradType or $gradMeta != $g5ModuleGradMeta or $gradStops != $g5ModuleGradStops or $force == true {\n\n        // enables SVG gradient support in Opera and IE9\n        $experimental-support-for-svg: true;\n\n        // check to see if $gradStops is supposed to be the default calculated list of values (passed value of false)\n        @if $gradStops == false {\n            $gradStops: (lighten($bgColor, 17%), $bgColor)\n        }\n\n        // check to see if we've turned off the gradient altogether\n        @if $gradType == none or $gradType == false {\n            @include background($bgColor);\n        }\n        // check to see if the gradient type has been switched from the default linear to radial\n        @elseif $gradType == radial {\n            // check to see if the gradient meta information is still the default linear-specific \"top\" value and hasn't been overridden\n            // note, there are other linear-specific values that can get past this check. This is simply for the defaults\n            @if $gradMeta == to bottom {\n                // switch it to the default radial-specific \"center center, circle\" value\n                $gradMeta: center center, circle;\n            }\n            @include background($bgColor radial-gradient($gradMeta, $gradStops));\n        }\n        // otherwise, assume default linear style\n        @else {\n            @include background($bgColor linear-gradient($gradMeta, $gradStops));\n        }\n\n        // IE8 and down\n        .lt-ie9 & {\n            $start: nth($gradStops, 1);\n            $finish: nth($gradStops, length($gradStops));\n            @if length($start) > 1 {\n                $start: nth($start, 1);\n            }\n            @if length($finish) > 1 {\n                $finish: nth($finish, 1);\n            }\n            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str( $start )}', endColorstr='#{ie-hex-str( $finish )}', GradientType=0);\n        }\n\n    } // end @if\n}\n\n// exposes the module title-icon-view icon/text colors and text font family on a per-app basis\n@mixin module_titleIconView(\n    $iconColor: $g5ModuleIconColor,\n    $titleColor: $g5ModuleTitleColor,\n    $titleFontFamily: $g5ModuleTitleFontFamily,\n    $titleFontStyle: $g5ModuleTitleFontStyle,\n    $titleTextTransform: $g5ModuleTitleTextTransform,\n    $force: false\n) {\n    // check to see if any of the arguments have been passed values that are non-default OR if we're forcing this to run.\n    // because _allModules.scss sets the properties of every module to the global values, we don't need to run this mixin on a per-app basis unless it introduces custom values. Saves on code.\n    @if $force == true or $iconColor != $g5ModuleIconColor or $titleColor != $g5ModuleTitleColor or $titleFontFamily != $g5ModuleTitleFontFamily or $titleFontStyle != $g5ModuleTitleFontStyle or $titleTextTransform != $g5ModuleTitleTextTransform {\n\n        @if $iconColor != $g5ModuleIconColor or $force == true {\n            color: $iconColor;\n        }\n\n        h3 {\n            @if $titleFontFamily != $g5ModuleTitleFontFamily or $force == true {\n                font-family: $titleFontFamily;\n            }\n            @if $titleFontStyle and ($titleFontStyle != $g5ModuleTitleFontStyle or $force == true) {\n                font-style: $titleFontStyle;\n            }\n            @if $titleTextTransform and ($titleTextTransform != $g5ModuleTitleTextTransform or $force == true) {\n                text-transform: $titleTextTransform;\n            }\n            @if $titleColor != $iconColor and ($titleColor != $g5ModuleTitleColor or $force == true) {\n                color: $titleColor;\n            }\n        }\n    } // end @if\n}\n\n\n// for outputting the g5 fonticons on modules at specific sizes\n@mixin module_titleIconViewFonticonsSizes(\n    // $size of 1, 2, 4 are fully supported by images.\n    // Other sizes will not produce a background image for browsers that do not support background-size (see @mixin g5fonticons_image() for those conditions)\n    $size: 1,\n    $iconString: false,\n    $imageString: false,\n    $imageOnly: false, // pass true if you only want to output images\n    $force: false // pass true if you want to output an image icon regardless of the $g5fonticonsModulesMode value\n) {\n    $selector: '[class^=\"icon-g5-\"], [class*=\" icon-g5-\"]';\n    @if $iconString {\n        $selector: '.icon-g5-'+$iconString;\n    }\n\n    $baseUnit: 108px;\n\n    @if $imageOnly == false {\n        #{$selector} {\n            @if $size == 1 {\n                font-size: 96px; // magic number // (roughly 88.9% of $baseUnit)\n                .lt-ie8 & { text-indent: 13px; } // magic number // (roughly 13.5% of font-size)\n            }\n            // @else if $size == 2 {\n            //     font-size: 172px; // magic number // (roughly 79.6% of $baseUnit*2)\n            //     .lt-ie8 & { text-indent: 34px; } // magic number // (roughly 19.8% of font-size)\n            // }\n            // @else if $size == 4 {\n            //     font-size: 348px; // magic number // (roughly 80.5% of $baseUnit*4)\n            //     .lt-ie8 & { text-indent: 67px; } // magic number // (roughly 19.3% of font-size)\n            // }\n            @else {\n                font-size: $baseUnit * $size * .8; // (80% of $baseUnit*$size)\n                .lt-ie8 & { text-indent: $baseUnit * $size * .8 * .2; } // (20% of font-size)\n            }\n            line-height: $baseUnit * $size;\n            width: $baseUnit * $size;\n            height: $baseUnit * $size;\n            margin: (-1 * $baseUnit * $size / 2) 0 0 (-1 * $baseUnit * $size / 2);\n        }\n    }\n\n    @if $imageString {\n        @if $g5fonticonsModulesMode == 'image' or $force == true {\n            @include g5fonticons(\n                $list: $imageString,\n                $image: true,\n                $single: true,\n                $imageScale: $size+'x'\n            );\n            @media only screen and (-webkit-min-device-pixel-ratio: 2),\n                   only screen and (min-resolution: 192dpi) {\n                $imageScale: '';\n                @if $size == 1 or $size == 2 or $size == 4 {\n                    $imageScale: ($size * 2) + 'x';\n                }\n                @else {\n                    $imageScale: $size + 'x';\n                }\n\n                @include g5fonticons(\n                    $list: $imageString,\n                    $image: true,\n                    $single: true,\n                    $imageScale: $imageScale\n                );\n            }\n        }\n    }\n}\n\n\n// convert the visitAppBtn in the upper-right of modules from a small clickable area to a full module clickable area\n@mixin module_visitAppBtnFullModule(\n    $iconVisible: true\n) {\n    .visitAppBtn{\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n\n        .icon-arrow-1-right {\n            @if $iconVisible == false {\n                display: none;\n            }\n            @else {\n                float: right;\n                margin-right: $g5ModuleVisitAppButtonOffset;\n                margin-top: $g5ModuleVisitAppButtonOffset;\n            }\n        }\n    }\n    .wide-view {\n        cursor: pointer;\n    }\n}\n\n// used to display a faded-out version of the module when data is loading\n@mixin module_fadeOnDataLoading(\n    $className: 'dataLoading',\n    $classesToHide: '.wide-view',\n    $classesToShow: '.title-icon-view',\n    $opacity: 0.25\n) {\n    &.#{$className} {\n        #{$classesToHide} {\n            display: none;\n        }\n        #{$classesToShow} {\n            display: block;\n\n            h3,\n            [class^=\"icon-g5-\"],\n            [class*=\" icon-g5-\"] {\n                @include opacity($opacity);\n            }\n        }\n    }\n}\n\n// used to color the cycle dots on a per-module basis\n@mixin module_cycleDots(\n    $cycleDotWidth: 8px,\n    $cycleDotBkg: transparent,\n    $cycleDotBorder: 1px solid $white,\n    $cycleDotBkgHover: transparentize($white, .5),\n    $cycleDotBorderHover: 1px solid $white,\n    $cycleDotBkgActive: $white,\n    $cycleDotBorderActive: 1px solid $white,\n    $cycleDotBorderRadius: $cycleDotWidth\n) {\n    @if $cycleDotWidth or $cycleDotBkg or $cycleDotBorder or $cycleDotBkgHover or $cycleDotBorderHover or $cycleDotBkgActive or $cycleDotBorderActive or $cycleDotBorderRadius {\n        .cycleLegend {\n            @if $cycleDotWidth {\n                margin-left: $cycleDotWidth / 4;\n\n                .lt-ie8 & {\n                    bottom: $cycleDotWidth / 2;\n                }\n            }\n\n            .cycleDot {\n                @if $cycleDotWidth {\n                    margin: ($cycleDotWidth / 2) ($cycleDotWidth) 0 ($cycleDotWidth / -2);\n                    width: $cycleDotWidth;\n                    height: $cycleDotWidth;\n                }\n                @if $cycleDotBkg {\n                    @include safeBkgs($cycleDotBkg);\n                }\n                @if $cycleDotBorder {\n                    border: $cycleDotBorder;\n                }\n                @if $cycleDotBorderRadius {\n                    @include borderRadiusSlim($cycleDotBorderRadius);\n                }\n\n                @if $cycleDotBkgHover or $cycleDotBorderHover {\n                    &:hover {\n                        @if $cycleDotBkgHover {\n                            @include safeBkgs($cycleDotBkgHover);\n                        }\n                        @if $cycleDotBorderHover {\n                            border: $cycleDotBorderHover;\n                        }\n                    }\n                }\n\n                @if $cycleDotBkgActive or $cycleDotBorderActive {\n                    &.selected,\n                    &.selected:hover {\n                        @if $cycleDotBkgActive {\n                            @include safeBkgs($cycleDotBkgActive);\n                        }\n                        @if $cycleDotBorderActive {\n                            border: $cycleDotBorderActive;\n                        }\n                    }\n                }\n            }\n        }\n    } // /@if\n}\n\n// used for coloring/styling container-splitter wells\n@mixin page_containerSplitterDisplay(\n    $h2Color                : false,\n    $textColor              : false,\n    $linkColor              : false,\n    $linkHoverColor         : false,\n    $linkIconColor          : false,\n    $linkIconHoverColor     : false,\n    $bgColor                : false,\n    $bgGradType             : false,\n    $bgGradMeta             : false,\n    $bgGradStops            : false,\n    $borderTopBottomWidth   : false,\n    $borderTopBottomColor   : false,\n    $boxShadow              : false\n) {\n    @if $textColor {\n        color: $textColor;\n    }\n    @if $bgColor {\n        @if $bgGradType {\n            @include module_moduleLinerBackground(\n                $bgColor: $bgColor,\n                $gradType: $bgGradType,\n                $gradMeta: $bgGradMeta,\n                $gradStops: $bgGradStops\n            );\n        }\n        @else {\n            background: $bgColor;\n        }\n    }\n    @include border-radius(0);\n    @if $borderTopBottomWidth and $borderTopBottomWidth != 0 {\n        border: $borderTopBottomWidth solid $borderTopBottomColor;\n        border-left: 0;\n        border-right: 0;\n    }\n    @else {\n        border: 0;\n    }\n    @if $boxShadow {\n        @include box-shadow($boxShadow);\n    }\n    @include fontSmoothing($textColor, $bgColor);\n\n    @if $h2Color {\n        h2 {\n            color: $h2Color;\n        }\n    }\n\n    a {\n        @if $linkColor {\n            color: $linkColor;\n        }\n\n        i {\n            @if $linkIconColor {\n                color: $linkIconColor;\n                border-color: $linkIconColor;\n            }\n        }\n\n        &:hover {\n            @if $linkHoverColor {\n                color: $linkHoverColor;\n            }\n            @if $linkIconHoverColor {\n                i {\n                    color: $linkIconHoverColor;\n                    border-color: $linkIconHoverColor;\n                }\n            }\n        }\n    }\n}\n\n\n//hack the gridCore methods of bootstrap for page content\n// @mixin gridCoreG5($columnWidth, $gutterWidth, $paddingHoriz) {\n//     .row {\n//         margin-left: ($gutterWidth * -1) + $paddingHoriz - $g5PageContentLeftRightBorderWidth;\n//         @include clearfix();\n//         //make sure nested rows have no effective margin\n//         .row {\n//             margin-left: ($gutterWidth * -1);\n//         }\n//     }\n\n//     [class*=\"span\"] {\n//         float: left;\n//         margin-left: $gutterWidth;\n//     }\n\n//     @include gridCoreSpanXg5($gridColumns, $columnWidth, $gutterWidth, $paddingHoriz);\n//     @include gridCoreOffsetXg5($gridColumns, $columnWidth, $gutterWidth, $paddingHoriz);\n// }\n\n// @mixin gridCoreSpanXg5($cols, $columnWidth, $gutterWidth, $contPadding) {\n//     @for $i from 1 through $cols {\n//         .span#{$i} { @include gridCoreSpanG5($i, $columnWidth, $gutterWidth, $contPadding, $cols) };\n//     }\n// }\n\n// @mixin gridCoreSpanG5($columns, $columnWidth, $gutterWidth, $contPadding, $numCols) {\n//     width: ($columnWidth * $columns) + ($gutterWidth * ($columns - 1)) - ($contPadding * 2 * ( $columns / $numCols)) ;\n// }\n\n// @mixin gridCoreOffsetXg5($cols, $columnWidth, $gutterWidth, $contPadding) {\n//     @for $i from 1 through $cols {\n//         .offset#{$i} { @include gridCoreOffsetG5($i, $columnWidth, $gutterWidth, $contPadding, $cols); };\n//     }\n// }\n\n// @mixin gridCoreOffsetG5($columns, $columnWidth, $gutterWidth, $contPadding, $numCols) {\n//     margin-left: ($columnWidth * $columns) + ($gutterWidth * ($columns + 1)) - ($contPadding * 2 * ( $columns / $numCols)) ;\n// }\n\n// @mixin gridCoreSpanMobile($cols) {\n//     @for $i from 1 through $cols {\n//         .span#{$i} { width: 100%; };\n//     }\n// }\n//eof gridCore hack\n\n@mixin gridCoreInnerFullSplit($leftRightPad, $topBotPad: null, $leftRightBorder: 0, $topBotBorder: 0) {\n    @include gridCoreInnerNegMargin($leftRightPad, $topBotPad);\n    @include gridCoreInnerPadding($leftRightPad, $topBotPad);\n}\n\n@mixin gridCoreInnerNegMargin($leftRightPad, $topBotPad: null, $leftRightBorder: 0, $topBotBorder: 0) {\n    @if $leftRightPad != null {\n        margin-left: (-1 * $leftRightPad);\n        margin-right: (-1 * $leftRightPad);\n    }\n    @if $topBotPad != null {\n        margin-top: (-1 * $topBotPad);\n        margin-bottom: (-1 * $topBotPad);\n    }\n}\n@mixin gridCoreInnerPadding($leftRightPad, $topBotPad: null, $leftRightBorder: 0, $topBotBorder: 0) {\n    @if $leftRightPad != null {\n        padding-left: $leftRightPad;\n        padding-right: $leftRightPad;\n    }\n    @if $topBotPad != null {\n        padding-top: $topBotPad;\n        padding-bottom: $topBotPad;\n    }\n}\n\n@mixin mobileBtn($width) {\n    display: block;\n    width: $width;\n    padding-left: 0;\n    padding-right: 0;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\n// $circledAwesomeIcon[prop] variables are defined in _variables.scss\n/*\n@mixin circledAwesomeIcon(\n    $fontSize:      $circledAwesomeIconFontSize,\n    $lineHeight:    false,\n    $color:         $circledAwesomeIconColor,\n    $borderColor:   $circledAwesomeIconBorderColor,\n    $circleWidth:   $circledAwesomeIconCircleWidth,\n    $borderWidth:   $circledAwesomeIconBorderWidth,\n    $bgColor:       $circledAwesomeIconBgColor\n) {\n\n    // check to see if $gradStops is supposed to be the default calculated list of values (passed value of false)\n    @if $lineHeight == false {\n        $lineHeight: $fontSize * 1.42\n    }\n\n    width: $circleWidth + (2 * $borderWidth);\n    height: $circleWidth + (2 * $borderWidth);\n    font-size: $fontSize;\n    line-height: $lineHeight;\n    text-align: center;\n    color: $color;\n\n    .lt-ie8 & {\n        width: $circleWidth;\n        height: $circleWidth;\n    }\n\n    &::before {\n        margin: 0;\n        width: $circleWidth;\n        height: $circleWidth;\n        background: $bgColor;\n        border: $borderWidth solid transparentize($borderColor,.01);\n        border-radius: $circleWidth + ($borderWidth * 2);\n    }\n}\n@mixin circledAwesomeIconRecolored(\n    $color: false,\n    $borderColor: false,\n    $bgColor: false\n) {\n    @if $color {\n        color: $color;\n    }\n\n    &::before {\n        @if $bgColor {\n            background: $bgColor;\n        }\n        @if $borderColor {\n            border-color: transparentize($borderColor,.01);\n        }\n    }\n}\n*/\n\n// NOTE: icon-g5-drawtool sits on the baseline. The default measurement is calibrated for that icon at a 108px font-size (1x1 default size)\n@mixin g5HomeAppIconBoxReflect($adjust: -31px) {\n    // turning these off. Android browsers can't render them properly\n    // -webkit-box-reflect: below $adjust -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(0.5, transparent), to(rgba(255,255,255,.5)));\n}\n\n// used for instances when good browsers and bad browsers (old IE) need two separate background color techniques\n// this will attempt to create a transparent background using the filter property for IE when necessary\n// the filter can be suppressed with $filter: false if it causes problems\n@mixin safeBkgs(\n    $bgColor,\n    $property: background,\n    $filter: true\n) {\n    #{$property} : $bgColor;\n    @if $filter and $bgColor and $bgColor != 'transparent' and $bgColor != 'none' and alpha($bgColor) != 1 {\n        .lt-ie9 & {\n            background: image-url('ieCleaPicFix.png');\n            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str( $bgColor )}', endColorstr='#{ie-hex-str( $bgColor )}', GradientType=0);\n            zoom: 1;\n        }\n    }\n}\n\n// used for only including border radius if the property is explicit\n// in practice, if the radius is being set for the first time, any value greater than 0 will output border-radius code while a value of 0 won't output anything (slimming down the CSS)\n// however, when a radius has already been set and it needs to be overridden back to 0, the $override flag needs to be set to true\n@mixin borderRadiusSlim(\n    $radius,\n    $override: false // set to true to allow a radius of 0 to override the logic test\n) {\n    @if $radius and $radius != 0 or $override == true {\n        @include border-radius($radius);\n    }\n}\n\n// used to swap between skin images and core images\n// if an explicit $imgUrlPath is passed in, the property will use that path\n// if no $imgUrlPath is passed in, the property will assume the skin images folder\n// therefore, if a skin needs to use images from the core images directory, it should pass an explicit $imgUrlPath\n// $imgUrl can be a list of images in the same directory if you need multiple backgrounds\n@mixin safeImgUrls(\n    $imgUrl,\n    $imgUrlPath,\n    $property: background\n) {\n    $new: '';\n\n    @if( $imgUrl ) {\n        @each $img in $imgUrl {\n            @if $new != '' {\n                $new : #{$new + ', '};\n            }\n\n            @if( $imgUrlPath and $imgUrlPath != 'img/' ) {\n                $new : #{$new + url($imgUrlPath + $img)};\n            } @else {\n                $new : #{$new + url('../img/' + $img)};\n            }\n        }\n\n        #{$property} : $new;\n    }\n}\n\n// used to include the -webkit-font-smoothing: antialiased; when light text is on a dark background\n@mixin fontSmoothing($textColor, $bgColor) {\n    @if $textColor and $bgColor and lightness($textColor) > lightness($bgColor) {\n        -webkit-font-smoothing: antialiased; // makes light-on-dark text look a bit better\n    }\n    @else {\n        -webkit-font-smoothing: inherit; // dark-on-light text we leave up to the browser\n    }\n}\n\n// helpful for overriding progress bar styles\n// doesn't include any classes, so this is really just a gradient generator\n@mixin progressBarHelper(\n    $bgColor,\n    $gradMeta: top, // pass false to do a solid color background\n    $gradStops: false\n) {\n    @if $gradMeta {\n        // enables SVG gradient support in Opera and IE9\n        $experimental-support-for-svg: true;\n\n        // check to see if $gradStops is supposed to be the default calculated list of values (passed value of false)\n        @if $gradStops == false {\n            $gradStops: ($bgColor, darken($bgColor, 15%))\n        }\n\n        @include background($bgColor linear-gradient($gradMeta, $gradStops));\n        // IE8 and down\n        .lt-ie9 & {\n            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str( nth($gradStops, 1) )}', endColorstr='#{ie-hex-str( nth($gradStops, length($gradStops)) )}', GradientType=0);\n        }\n    }\n    @else {\n        background: $bgColor;\n    }\n}\n\n// for creating entirely new progress bar styles\n// default values for each parameter were taken from bootstrap/_progress-bars (except the bar color using the $linkColor variable. That's a G5 thing)\n@mixin progressBarHelperFull(\n    $wellClass: '.progress',\n    // progress well\n    $bgColor: $grayLight,\n    $gradMeta: top, // no *GradType on this one. Always linear, but it can be right/left or top/bottom. A false value will cancel the gradient altogether\n    $gradStops: false,\n    $borderRadius: $baseBorderRadius,\n    $boxShadow: inset 0 1px 2px rgba(0,0,0,.1),\n    // progress bar\n    $barTextColor: $white,\n    $barTextShadow: 0 -1px 0 rgba(0,0,0,.25),\n    $barBgColor: $linkColor,\n    $barGradMeta: top, // no *GradType on this one. Always linear, but it can be right/left or top/bottom. A false value will cancel the gradient altogether\n    $barGradStops: false,\n    $barBoxShadow: inset 0 -1px 0 rgba(0,0,0,.15)\n) {\n    @if $gradMeta {\n        // enables SVG gradient support in Opera and IE9\n        $experimental-support-for-svg: true;\n\n        // check to see if $gradStops is supposed to be the default calculated list of values (passed value of false)\n        @if $gradStops == false {\n            $gradStops: ($bgColor, darken($bgColor, 15%))\n        }\n    }\n    @if $barGradMeta {\n        // enables SVG gradient support in Opera and IE9\n        $experimental-support-for-svg: true;\n\n        // check to see if $barGradStops is supposed to be the default calculated list of values (passed value of false)\n        @if $barGradStops == false {\n            $barGradStops: ($barBgColor, darken($barBgColor, 15%))\n        }\n    }\n\n    #{$wellClass} {\n        @if $bgColor {\n            @if $gradMeta {\n                @include background($bgColor linear-gradient($gradMeta, $gradStops));\n            }\n            @else {\n                background: $bgColor;\n            }\n        }\n        @if $boxShadow {\n            @include box-shadow($boxShadow);\n        }\n        @if $borderRadius {\n            @include border-radius($borderRadius);\n        }\n    }\n\n    // Bar of progress\n    #{$wellClass} .bar {\n        @if $barTextColor {\n            color: $barTextColor;\n        }\n        @if $barTextShadow {\n            text-shadow: $barTextShadow;\n        }\n        @if $barBgColor {\n            @if $barGradMeta {\n                @include background($barBgColor linear-gradient($barGradMeta, $barGradStops));\n            }\n            @else {\n                background: $barBgColor;\n            }\n        }\n        @if $barBoxShadow {\n            @include box-shadow($barBoxShadow);\n        }\n    }\n}\n\n// avatarInitialSize\n// calculate the fontsize based on container height of avatar * line height should match\n@function avatarInitialSize($height) {\n    @if $height < 41{\n        @return $height/2.5;\n    }@else{\n        @return $height/4;\n    }\n\n}\n\n@mixin avatarSizing($size: $card_avatarSize_default) {\n    .avatarwrap {\n        height: $size;\n        width: $size;\n        .avatar-initials {\n            font-size: avatarInitialSize($size);\n            line-height: $size;\n        }\n    }\n\n} // /@mixin cardAvatarSizing\n\n\n\n// for generating the CSS necessary for G5 Fonticons\n@mixin g5fonticons(\n    $list,\n    $ie7: false,\n    $image: false,\n    $single: false,\n    $imageScale: false\n) {\n    @if $single {\n        @if $image {\n            @include g5fonticons_image( nth($list,1), $imageScale );\n        }\n        @else {\n            @if $ie7 {\n                @include g5fonticons_font( nth($list,1), nth($list,3), $ie7: true );\n            }\n            @else {\n                @include g5fonticons_font( nth($list,1), nth($list,2) );\n            }\n        }\n    }\n    @else {\n        @each $icon in $list {\n            @if $image {\n                @include g5fonticons_image( nth($icon,1), $imageScale );\n            }\n            @else {\n                @if $ie7 {\n                    @include g5fonticons_font( nth($icon,1), nth($icon,3), $ie7: true );\n                }\n                @else {\n                    @include g5fonticons_font( nth($icon,1), nth($icon,2) );\n                }\n            }\n        }\n    }\n}\n// g5fonticons helpers\n@mixin g5fonticons_font(\n    $identifier: '',\n    $unicode: '',\n    $ie7: false\n) {\n    @if $ie7 {\n        .icon-g5-#{$identifier} { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#x#{$unicode};&nbsp;'); }\n    }\n    @else {\n        .icon-g5-#{$identifier}:before { content: \"#{$unicode}\"; }\n    }\n}\n@mixin g5fonticons_image(\n    $identifier: '',\n    $scale: false\n) {\n    @if $scale and ($scale == '2x' or $scale == '4x' or $scale == '8x') {\n        .icon-g5-#{$identifier} {\n            background-image: image-url('icon-g5-#{$identifier}-#{$scale}.png');\n        }\n    }\n    @else {\n        @if $scale and $scale != '1x' {\n            .icon-g5-#{$identifier} {\n                background-image: image-url('icon-g5-#{$identifier}.png');\n                background-size: 100%;\n            }\n            .no-backgroundsize & .icon-g5-#{$identifier} {\n                background-image: none;\n            }\n        }\n        @else {\n            .icon-g5-#{$identifier} {\n                background-image: image-url('icon-g5-#{$identifier}.png');\n            }\n        }\n    }\n}\n@function g5fonticons_getSelectorsFromList($list) {\n    $selectors: '';\n    // check to see if our $list is longer than 1 item and the second item in the list has no length (meaning it's a string)\n    // if this is true, our $list has only a single font item in it\n    @if length($list) > 1 and length(nth($list,2)) < 2 {\n        $selectors: '.icon-g5-' + nth($list, 1);\n    }\n    @else {\n        @each $font in $list {\n            @if nth($list, 1) == $font {\n                $selectors: '.icon-g5-' + nth($font, 1);\n            }\n            @else {\n                $selectors: $selectors + ', .icon-g5-' + nth($font, 1);\n            }\n        }\n    }\n    @return $selectors;\n}\n@mixin linear-gradient($direction, $color-stops...) {\n  @if is-direction($direction) == false {\n    $color-stops: $direction, $color-stops;\n    $direction: 180deg;\n  }\n  background: nth(nth($color-stops, 1), 1);\n  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);\n  background: linear-gradient($direction, $color-stops);\n}\n@mixin transition($transition...) {\n    -moz-transition:    $transition;\n    -o-transition:      $transition;\n    -webkit-transition: $transition;\n    transition:         $transition;\n}\n\n\n // $max-height - max-height property value. required\n// parameter to limit text in non-webkit browser.\n// Be careful with overriding properties.\n// Strongly recommended to include this mixin after all properties\n// to prevent overriding of display property:\n// .my block {\n//   display: block;\n//   ...\n//   @include ellipsis(2em, 2);\n// }\n// Example of usage:\n// @include ellipsis(2em, 2);\n@mixin ellipsis ($max-height, $lines: 2) {\n  // Fallback for non-webkit browsers.\n  // Fallback does not render ellipsis.\n  overflow: hidden;\n  max-height: $max-height;\n\n  // Webkit solution for multiline ellipsis\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: $lines;\n\n  // Solution for Opera\n  text-overflow: -o-ellipsis-lastline;\n}\n\n/**\n *  @mixin applyGlobalLinkStyles()\n *\n *  this mixin will apply the global link styles (or an optional subset thereof)\n *  use it anywhere you want to apply the global styles, but don't want to have to manually keep them in sync\n *  note that it will only apply those properties that have a definition in _variables.scss\n *\n *  by default, all defined properties are applied. Pass false to any property to be excluded\n */\n@mixin applyGlobalLinkStyles(\n    $color: true,\n    $fontWeight: true,\n    $fontStyle: true,\n    $textDecoration: true,\n    $textTransform: true,\n    $bgColor: true,\n    $border: true\n)\n{\n    @if $color          and $linkColor != $textColor {\n        /* color via applyGlobalLinkStyles() */\n        color: $linkColor;\n    }\n    @if $fontWeight      and $linkFontWeight != $fontWeightNormal {\n        /* font-weight via applyGlobalLinkStyles() */\n        font-weight: $linkFontWeight;\n    }\n    @if $fontStyle      and $linkFontStyle != none {\n        /* font-style via applyGlobalLinkStyles() */\n        font-style: $linkFontStyle;\n    }\n    @if $textDecoration and $linkTextDecoration != none {\n        /* text-decoration via applyGlobalLinkStyles() */\n        text-decoration: $linkTextDecoration;\n    }\n    @if $textTransform  and $linkTextTransform != none {\n        /* text-transform via applyGlobalLinkStyles() */\n        text-transform: $linkTextTransform;\n    }\n    @if $bgColor        and $linkBgColor != transparent {\n        /* background-color via applyGlobalLinkStyles() */\n        background-color: $linkBgColor;\n    }\n    @if $border         and $linkBorder {\n        /* border-bottom: via applyGlobalLinkStyles() */\n        border-bottom: $linkBorder;\n    }\n\n    &:hover,\n    &:focus {\n        @if $fontWeight     and $linkColorHover {\n            /* color via applyGlobalLinkStyles() */\n            color: $linkColorHover;\n        }\n        @if $fontStyle      and $linkFontStyleHover {\n            /* font-style via applyGlobalLinkStyles() */\n            font-style: $linkFontStyleHover;\n        }\n        @if $textDecoration and $linkTextDecorationHover {\n            /* text-decoration via applyGlobalLinkStyles() */\n            text-decoration: $linkTextDecorationHover;\n        }\n        @if $textTransform  and $linkTextTransformHover {\n            /* text-transform via applyGlobalLinkStyles() */\n            text-transform: $linkTextTransformHover;\n        }\n        @if $bgColor        and $linkBgColorHover {\n            /* background-color via applyGlobalLinkStyles() */\n            background-color: $linkBgColorHover;\n        }\n        @if $border         and $linkBorderHover {\n            /* border-bottom: via applyGlobalLinkStyles() */\n            border-bottom: $linkBorderHover;\n        }\n    }\n}\n\n/**\n *  @mixin unapplyGlobalLinkStyles()\n *  (a.k.a. \"ignoreGlobalLinkStyles()\")\n *\n *  this mixin will override the global link styles (or an optional subset thereof)\n *  use it anywhere you want to undo the global styles, but don't want to have to manually keep them in sync\n *  note that it will only override those properties that have a definition in _variables.scss\n *\n *  by default, all defined properties are overridden. Pass false to any property to be excluded\n *\n *  note: font and text properties are set to inherit from the parent while background and border are set to disappear\n *  note: if you want to apply a specific style TO BOTH :link and :hover instead of inheriting (or disappearing), you can pass that value\n *  note: if you want to apply a different style TO EACH OF :link and :hover, pass two values space-separated\n */\n@mixin unapplyGlobalLinkStyles(\n    $color: inherit,\n    $fontWeight: inherit,\n    $fontStyle: inherit,\n    $textDecoration: inherit,\n    $textTransform: inherit,\n    $bgColor: transparent,\n    $border: none\n)\n{\n    @if $color          and $linkColor != $textColor {\n        @if nth($color, 1) {\n            /* color via unapplyGlobalLinkStyles() */\n            color: nth($color, 1);\n        }\n    }\n    @if $fontWeight      and $linkFontWeight != $fontWeightNormal {\n        @if nth($fontWeight, 1) {\n            /* font-weight via unapplyGlobalLinkStyles() */\n            font-weight: nth($fontWeight, 1);\n        }\n    }\n    @if $fontStyle      and $linkFontStyle != none {\n        @if nth($fontStyle, 1) {\n            /* font-style via unapplyGlobalLinkStyles() */\n            font-style: nth($fontStyle, 1);\n        }\n    }\n    @if $textDecoration and $linkTextDecoration != none {\n        @if nth($textDecoration, 1) {\n            /* text-decoration via unapplyGlobalLinkStyles() */\n            text-decoration: nth($textDecoration, 1);\n        }\n    }\n    @if $textTransform  and $linkTextTransform != none {\n        @if nth($textTransform, 1) {\n            /* text-transform via unapplyGlobalLinkStyles() */\n            text-transform: nth($textTransform, 1);\n        }\n    }\n    @if $bgColor        and $bgColor != transparent and $linkBgColor != transparent {\n        @if nth($bgColor, 1) {\n            /* background-color via unapplyGlobalLinkStyles() */\n            background-color: nth($bgColor, 1);\n        }\n    }\n    @if $border         and $linkBorder {\n        @if nth($border, 1) {\n            /* border-bottom: via unapplyGlobalLinkStyles() */\n            border-bottom: nth($border, 1);\n        }\n    }\n\n    &:hover,\n    &:focus {\n        // first we check to see if the length of the passed value is 2 (and the property is being set globally)\n            // then we check to see if the second value is useful (false allows us to ignore this altogether)\n            // however, if false and the first value was set, we need to reapply the global style\n        // otherwise...\n            // we apply the first value (if the property is being set globally)\n        @if length($color) == 2 and $linkColorHover {\n            @if nth($color, 2) {\n                /* color via unapplyGlobalLinkStyles() */\n                color: nth($color, 2);\n            }\n            @else {\n                @if nth($color, 1) {\n                    /* color via unapplyGlobalLinkStyles() */\n                    color: $linkColorHover;\n                }\n            }\n        }\n        @else {\n            @if $color          and $linkColorHover {\n                /* color via unapplyGlobalLinkStyles() */\n                color: $color;\n            }\n        }\n\n        @if length($fontWeight) == 2 and $linkFontWeightHover {\n            @if nth($fontWeight, 2) {\n                /* font-weight via unapplyGlobalLinkStyles() */\n                font-weight: nth($fontWeight, 2);\n            }\n            @else {\n                @if nth($fontWeight, 1) {\n                    /* font-weight via unapplyGlobalLinkStyles() */\n                    font-weight: $linkFontWeightHover;\n                }\n            }\n        }\n        @else {\n            @if $fontWeight     and $linkFontWeightHover {\n                /* font-weight via unapplyGlobalLinkStyles() */\n                font-weight: $fontWeight;\n            }\n        }\n\n        @if length($fontStyle) == 2 and $linkFontStyleHover {\n            @if nth($fontStyle, 2) {\n                /* font-style via unapplyGlobalLinkStyles() */\n                font-style: nth($fontStyle, 2);\n            }\n            @else {\n                @if nth($fontStyle, 1) {\n                    /* font-style via unapplyGlobalLinkStyles() */\n                    font-style: $linkFontStyleHover;\n                }\n            }\n        }\n        @else {\n            @if $fontStyle      and $linkFontStyleHover {\n                /* font-style via unapplyGlobalLinkStyles() */\n                font-style: $fontStyle;\n            }\n        }\n\n        @if length($textDecoration) == 2 and $linkTextDecorationHover {\n            @if nth($textDecoration, 2) {\n                /* text-decoration via unapplyGlobalLinkStyles() */\n                text-decoration: nth($textDecoration, 2);\n            }\n            @else {\n                @if nth($textDecoration, 1) {\n                    /* text-decoration via unapplyGlobalLinkStyles() */\n                    text-decoration: $linkTextDecorationHover;\n                }\n            }\n        }\n        @else {\n            @if $textDecoration and $linkTextDecorationHover {\n                /* text-decoration via unapplyGlobalLinkStyles() */\n                text-decoration: $textDecoration;\n            }\n        }\n\n        @if length($textTransform) == 2 and $linkTextTransformHover {\n            @if nth($textTransform, 2) {\n                /* text-transform via unapplyGlobalLinkStyles() */\n                text-transform: nth($textTransform, 2);\n            }\n            @else {\n                @if nth($textTransform, 1) {\n                    /* text-transform via unapplyGlobalLinkStyles() */\n                    text-transform: $linkTextTransformHover;\n                }\n            }\n        }\n        @else {\n            @if $textTransform  and $linkTextTransformHover {\n                /* text-transform via unapplyGlobalLinkStyles() */\n                text-transform: $textTransform;\n            }\n        }\n\n        @if length($bgColor) == 2 and $linkBgColorHover {\n            @if nth($bgColor, 2) {\n                /* background-color via unapplyGlobalLinkStyles() */\n                background-color: nth($bgColor, 2);\n            }\n            @else {\n                @if nth($bgColor, 1) {\n                    /* background-color via unapplyGlobalLinkStyles() */\n                    background-color:$linkBgColorHover ;\n                }\n            }\n        }\n        @else {\n            @if $bgColor        and $bgColor != transparent and $linkBgColorHover {\n                /* background-color via unapplyGlobalLinkStyles() */\n                background-color: $bgColor;\n            }\n        }\n\n        @if length($border) == 2 and $linkBorderHover {\n            @if nth($border, 2) {\n                /* border-bottom: via unapplyGlobalLinkStyles() */\n                border-bottom: nth($border, 2);\n            }\n            @else {\n                @if nth($border, 1) {\n                    /* border-bottom: via unapplyGlobalLinkStyles() */\n                    border-bottom: $linkBorderHover;\n                }\n            }\n        }\n        @else {\n            @if $border         and $linkBorderHover {\n                /* border-bottom: via unapplyGlobalLinkStyles() */\n                border-bottom: $border;\n            }\n        }\n\n    }\n}\n/**\n * @mixin ignoreGlobalLinkStyles()\n *\n * proxy for \"unapplyGlobalLinkStyles()\" with a different name to help with understanding what it does\n * works exactly the same way\n */\n@mixin ignoreGlobalLinkStyles(\n    $color: inherit,\n    $fontWeight: inherit,\n    $fontStyle: inherit,\n    $textDecoration: inherit,\n    $textTransform: inherit,\n    $bgColor: transparent,\n    $border: none\n)\n{\n    @include unapplyGlobalLinkStyles(\n        $color: $color,\n        $fontWeight: $fontWeight,\n        $fontStyle: $fontStyle,\n        $textDecoration: $textDecoration,\n        $textTransform: $textTransform,\n        $bgColor: $bgColor,\n        $border: $border\n    );\n}\n\n/**\n * @mixin g6buttonStates()\n *\n * apply text color, background color, and border color to the hover, active, and disabled states of a button\n */\n@mixin g6buttonStates($textColor, $bgColor, $bgHoverColor, $borderColor: $bgColor, $borderHoverColor: $bgHoverColor) {\n    &:hover,\n    &:focus,\n    &:active,\n    &.active {\n        color: $textColor;\n        background: $bgHoverColor;\n        border-color: $borderHoverColor;\n    }\n\n    // Active state\n    &.active,\n    &:active {\n    }\n\n    // Disabled state\n    &.disabled,\n    &[disabled] {\n        color: $textColor;\n        background-color: $bgColor;\n        border-color: $borderColor;\n    }\n}","/*styles set here will override default styles of jhtml iframes*/\n@import \"partials/colors\";\n@import \"partials/variables\";\n@import \"partials/mixins\";\n$base_variablesOnly: true;\nhtml {\n    height: 100%;\n    overflow: hidden;\n    border: 0;\n}\n\nbody {\n    height: 100%;\n    overflow: auto;\n    word-wrap: break-word;\n    margin: 0;\n    font-family: $bodyFont;\n    font-size: 14px;\n    line-height: 20px;\n    -webkit-font-smoothing: $webkitFontSmoothing;\n    background: $brand_color_white;\n    color: $brand_color_black;\n\n}\n/* Mobile Safari (and other mobile browsers???) zooms in on input fields when the font-size is less than 16px */\n@media (max-width: 240px) {\n    body {\n        font-size: 16px;\n    }\n}\n\np {\n    margin-bottom: 0;\n}\n\np.placeholder,\np span i span {\n    color: $brand_color_dark;\n    font-style: normal;\n}","/*\n\nBRAND COLORS\n============\n\nTeal (Primary)\n#29c3d2\n\nNavy (secondary)\n#083c5a\n\nPurple (tertiary)\n#76508e\n\n\nMESSAGING COLORS\n============\n\nSalmon (alert)\n#e7605c\n\nYellow (warning)\n#f0cb5b\n\nGreen\n#5fce8a\n\n\nGRAYSCALE STACK\n===============\n\nBlack (branded)\n#353a40\n\nDarker Gray\n#666666\n\nDark Gray\n#999999\n\nGray\n#cccccc\n\nLight Gray\n#e8e8e8\n\nLighter Gray\n#efefef\n\nWhite (branded)\n#ffffff\n\n\nOTHER COLORS\n============\n\nStripes\n#f8f8f8\n\n*/\n/*\n$brand_chartColors: $brand_color_primary,\n                     $brand_color_secondary,\n                     $brand_color_tertiary,\n                     scale-color($brand_color_primary, $lightness: 50%, $saturation: -50%),\n                     scale-color($brand_color_secondary, $lightness: 50%, $saturation: -50%),\n                     scale-color($brand_color_tertiary, $lightness: 50%, $saturation: -50%) !default;\n*/\n/***\n *    888888b.                     888             888\n *    888  \"88b                    888             888\n *    888  .88P                    888             888\n *    8888888K.   .d88b.   .d88b.  888888 .d8888b  888888 888d888 8888b.  88888b.       888  888  8888b.  888d888 .d8888b\n *    888  \"Y88b d88\"\"88b d88\"\"88b 888    88K      888    888P\"      \"88b 888 \"88b      888  888     \"88b 888P\"   88K\n *    888    888 888  888 888  888 888    \"Y8888b. 888    888    .d888888 888  888      Y88  88P .d888888 888     \"Y8888b.\n *    888   d88P Y88..88P Y88..88P Y88b.       X88 Y88b.  888    888  888 888 d88P       Y8bd8P  888  888 888          X88\n *    8888888P\"   \"Y88P\"   \"Y88P\"   \"Y888  88888P'  \"Y888 888    \"Y888888 88888P\"         Y88P   \"Y888888 888      88888P'\n *                                                                        888\n *                                                                        888\n *                                                                        888\n */\n/***\n *    oo                                         dP\n *                                               88\n *    dP 88d8b.d8b. 88d888b. .d8888b. 88d888b. d8888P\n *    88 88'`88'`88 88'  `88 88'  `88 88'  `88   88\n *    88 88  88  88 88.  .88 88.  .88 88         88\n *    dP dP  dP  dP 88Y888P' `88888P' dP         dP\n *                  88\n *                  dP\n */\n/***\n *     .d8888b.   .d8888b.\n *    d88P  Y88b d88P  Y88b\n *    888    888 888\n *    888        888d888b.       888  888  8888b.  888d888 .d8888b\n *    888  88888 888P \"Y88b      888  888     \"88b 888P\"   88K\n *    888    888 888    888      Y88  88P .d888888 888     \"Y8888b.\n *    Y88b  d88P Y88b  d88P       Y8bd8P  888  888 888          X88\n *     \"Y8888P88  \"Y8888P\"         Y88P   \"Y888888 888      88888P'\n *\n *\n *\n */\n/*\n * use\n\n.mobileSizesDefault {\n    // ALL MOBILE SIZES and up should be default styles\n}\n@media (min-width: $breakpoint_tablet_min) {\n    //TABLET SIZES - and up\n}\n@media (min-width: $breakpoint_desktop_min) {\n   //DESKTOP SIZES - and up\n}\n@media (min-width: $breakpoint_desktopLarge_min) {\n    //DESKTOP LARGE\n}\n*/\n/*\n@mixin circledAwesomeIcon(\n    $fontSize:      $circledAwesomeIconFontSize,\n    $lineHeight:    false,\n    $color:         $circledAwesomeIconColor,\n    $borderColor:   $circledAwesomeIconBorderColor,\n    $circleWidth:   $circledAwesomeIconCircleWidth,\n    $borderWidth:   $circledAwesomeIconBorderWidth,\n    $bgColor:       $circledAwesomeIconBgColor\n) {\n\n    // check to see if $gradStops is supposed to be the default calculated list of values (passed value of false)\n    @if $lineHeight == false {\n        $lineHeight: $fontSize * 1.42\n    }\n\n    width: $circleWidth + (2 * $borderWidth);\n    height: $circleWidth + (2 * $borderWidth);\n    font-size: $fontSize;\n    line-height: $lineHeight;\n    text-align: center;\n    color: $color;\n\n    .lt-ie8 & {\n        width: $circleWidth;\n        height: $circleWidth;\n    }\n\n    &::before {\n        margin: 0;\n        width: $circleWidth;\n        height: $circleWidth;\n        background: $bgColor;\n        border: $borderWidth solid transparentize($borderColor,.01);\n        border-radius: $circleWidth + ($borderWidth * 2);\n    }\n}\n@mixin circledAwesomeIconRecolored(\n    $color: false,\n    $borderColor: false,\n    $bgColor: false\n) {\n    @if $color {\n        color: $color;\n    }\n\n    &::before {\n        @if $bgColor {\n            background: $bgColor;\n        }\n        @if $borderColor {\n            border-color: transparentize($borderColor,.01);\n        }\n    }\n}\n*/\n/**\n *  @mixin applyGlobalLinkStyles()\n *\n *  this mixin will apply the global link styles (or an optional subset thereof)\n *  use it anywhere you want to apply the global styles, but don't want to have to manually keep them in sync\n *  note that it will only apply those properties that have a definition in _variables.scss\n *\n *  by default, all defined properties are applied. Pass false to any property to be excluded\n */\n/**\n *  @mixin unapplyGlobalLinkStyles()\n *  (a.k.a. \"ignoreGlobalLinkStyles()\")\n *\n *  this mixin will override the global link styles (or an optional subset thereof)\n *  use it anywhere you want to undo the global styles, but don't want to have to manually keep them in sync\n *  note that it will only override those properties that have a definition in _variables.scss\n *\n *  by default, all defined properties are overridden. Pass false to any property to be excluded\n *\n *  note: font and text properties are set to inherit from the parent while background and border are set to disappear\n *  note: if you want to apply a specific style TO BOTH :link and :hover instead of inheriting (or disappearing), you can pass that value\n *  note: if you want to apply a different style TO EACH OF :link and :hover, pass two values space-separated\n */\n/**\n * @mixin ignoreGlobalLinkStyles()\n *\n * proxy for \"unapplyGlobalLinkStyles()\" with a different name to help with understanding what it does\n * works exactly the same way\n */\n/**\n * @mixin g6buttonStates()\n *\n * apply text color, background color, and border color to the hover, active, and disabled states of a button\n */\n/*styles set here will override default styles of jhtml iframes*/\n/*\n\nBRAND COLORS\n============\n\nTeal (Primary)\n#29c3d2\n\nNavy (secondary)\n#083c5a\n\nPurple (tertiary)\n#76508e\n\n\nMESSAGING COLORS\n============\n\nSalmon (alert)\n#e7605c\n\nYellow (warning)\n#f0cb5b\n\nGreen\n#5fce8a\n\n\nGRAYSCALE STACK\n===============\n\nBlack (branded)\n#353a40\n\nDarker Gray\n#666666\n\nDark Gray\n#999999\n\nGray\n#cccccc\n\nLight Gray\n#e8e8e8\n\nLighter Gray\n#efefef\n\nWhite (branded)\n#ffffff\n\n\nOTHER COLORS\n============\n\nStripes\n#f8f8f8\n\n*/\n/*\n$brand_chartColors: $brand_color_primary,\n                     $brand_color_secondary,\n                     $brand_color_tertiary,\n                     scale-color($brand_color_primary, $lightness: 50%, $saturation: -50%),\n                     scale-color($brand_color_secondary, $lightness: 50%, $saturation: -50%),\n                     scale-color($brand_color_tertiary, $lightness: 50%, $saturation: -50%) !default;\n*/\n/***\n *    888888b.                     888             888\n *    888  \"88b                    888             888\n *    888  .88P                    888             888\n *    8888888K.   .d88b.   .d88b.  888888 .d8888b  888888 888d888 8888b.  88888b.       888  888  8888b.  888d888 .d8888b\n *    888  \"Y88b d88\"\"88b d88\"\"88b 888    88K      888    888P\"      \"88b 888 \"88b      888  888     \"88b 888P\"   88K\n *    888    888 888  888 888  888 888    \"Y8888b. 888    888    .d888888 888  888      Y88  88P .d888888 888     \"Y8888b.\n *    888   d88P Y88..88P Y88..88P Y88b.       X88 Y88b.  888    888  888 888 d88P       Y8bd8P  888  888 888          X88\n *    8888888P\"   \"Y88P\"   \"Y88P\"   \"Y888  88888P'  \"Y888 888    \"Y888888 88888P\"         Y88P   \"Y888888 888      88888P'\n *                                                                        888\n *                                                                        888\n *                                                                        888\n */\n/***\n *    oo                                         dP\n *                                               88\n *    dP 88d8b.d8b. 88d888b. .d8888b. 88d888b. d8888P\n *    88 88'`88'`88 88'  `88 88'  `88 88'  `88   88\n *    88 88  88  88 88.  .88 88.  .88 88         88\n *    dP dP  dP  dP 88Y888P' `88888P' dP         dP\n *                  88\n *                  dP\n */\n/***\n *     .d8888b.   .d8888b.\n *    d88P  Y88b d88P  Y88b\n *    888    888 888\n *    888        888d888b.       888  888  8888b.  888d888 .d8888b\n *    888  88888 888P \"Y88b      888  888     \"88b 888P\"   88K\n *    888    888 888    888      Y88  88P .d888888 888     \"Y8888b.\n *    Y88b  d88P Y88b  d88P       Y8bd8P  888  888 888          X88\n *     \"Y8888P88  \"Y8888P\"         Y88P   \"Y888888 888      88888P'\n *\n *\n *\n */\n/*\n * use\n\n.mobileSizesDefault {\n    // ALL MOBILE SIZES and up should be default styles\n}\n@media (min-width: $breakpoint_tablet_min) {\n    //TABLET SIZES - and up\n}\n@media (min-width: $breakpoint_desktop_min) {\n   //DESKTOP SIZES - and up\n}\n@media (min-width: $breakpoint_desktopLarge_min) {\n    //DESKTOP LARGE\n}\n*/\n/*\n@mixin circledAwesomeIcon(\n    $fontSize:      $circledAwesomeIconFontSize,\n    $lineHeight:    false,\n    $color:         $circledAwesomeIconColor,\n    $borderColor:   $circledAwesomeIconBorderColor,\n    $circleWidth:   $circledAwesomeIconCircleWidth,\n    $borderWidth:   $circledAwesomeIconBorderWidth,\n    $bgColor:       $circledAwesomeIconBgColor\n) {\n\n    // check to see if $gradStops is supposed to be the default calculated list of values (passed value of false)\n    @if $lineHeight == false {\n        $lineHeight: $fontSize * 1.42\n    }\n\n    width: $circleWidth + (2 * $borderWidth);\n    height: $circleWidth + (2 * $borderWidth);\n    font-size: $fontSize;\n    line-height: $lineHeight;\n    text-align: center;\n    color: $color;\n\n    .lt-ie8 & {\n        width: $circleWidth;\n        height: $circleWidth;\n    }\n\n    &::before {\n        margin: 0;\n        width: $circleWidth;\n        height: $circleWidth;\n        background: $bgColor;\n        border: $borderWidth solid transparentize($borderColor,.01);\n        border-radius: $circleWidth + ($borderWidth * 2);\n    }\n}\n@mixin circledAwesomeIconRecolored(\n    $color: false,\n    $borderColor: false,\n    $bgColor: false\n) {\n    @if $color {\n        color: $color;\n    }\n\n    &::before {\n        @if $bgColor {\n            background: $bgColor;\n        }\n        @if $borderColor {\n            border-color: transparentize($borderColor,.01);\n        }\n    }\n}\n*/\n/**\n *  @mixin applyGlobalLinkStyles()\n *\n *  this mixin will apply the global link styles (or an optional subset thereof)\n *  use it anywhere you want to apply the global styles, but don't want to have to manually keep them in sync\n *  note that it will only apply those properties that have a definition in _variables.scss\n *\n *  by default, all defined properties are applied. Pass false to any property to be excluded\n */\n/**\n *  @mixin unapplyGlobalLinkStyles()\n *  (a.k.a. \"ignoreGlobalLinkStyles()\")\n *\n *  this mixin will override the global link styles (or an optional subset thereof)\n *  use it anywhere you want to undo the global styles, but don't want to have to manually keep them in sync\n *  note that it will only override those properties that have a definition in _variables.scss\n *\n *  by default, all defined properties are overridden. Pass false to any property to be excluded\n *\n *  note: font and text properties are set to inherit from the parent while background and border are set to disappear\n *  note: if you want to apply a specific style TO BOTH :link and :hover instead of inheriting (or disappearing), you can pass that value\n *  note: if you want to apply a different style TO EACH OF :link and :hover, pass two values space-separated\n */\n/**\n * @mixin ignoreGlobalLinkStyles()\n *\n * proxy for \"unapplyGlobalLinkStyles()\" with a different name to help with understanding what it does\n * works exactly the same way\n */\n/**\n * @mixin g6buttonStates()\n *\n * apply text color, background color, and border color to the hover, active, and disabled states of a button\n */\n/* line 6, /Users/tesch/Development/g/src/fe/core/base/scss/jhtmlArea.scss */\nhtml {\n  height: 100%;\n  overflow: hidden;\n  border: 0;\n}\n\n/* line 12, /Users/tesch/Development/g/src/fe/core/base/scss/jhtmlArea.scss */\nbody {\n  height: 100%;\n  overflow: auto;\n  word-wrap: break-word;\n  margin: 0;\n  font-family: \"open-sans\", \"Helvetica Neue\", Helvetica, Arial, sans;\n  font-size: 14px;\n  line-height: 20px;\n  -webkit-font-smoothing: antialiased;\n  background: #fff;\n  color: #353a40;\n}\n\n/* Mobile Safari (and other mobile browsers???) zooms in on input fields when the font-size is less than 16px */\n@media (max-width: 240px) {\n  /* line 27, /Users/tesch/Development/g/src/fe/core/base/scss/jhtmlArea.scss */\n  body {\n    font-size: 16px;\n  }\n}\n\n/* line 32, /Users/tesch/Development/g/src/fe/core/base/scss/jhtmlArea.scss */\np {\n  margin-bottom: 0;\n}\n\n/* line 36, /Users/tesch/Development/g/src/fe/core/base/scss/jhtmlArea.scss */\np.placeholder,\np span i span {\n  color: #999;\n  font-style: normal;\n}\n"]}